#!/bin/bash

set -eo pipefail

REPO_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )"

IMAGE_NAME="${IMAGE_NAME:-us-central1-docker.pkg.dev/dsp-artifact-registry/firecloud-develop-shim/firecloud-develop-shim}"
IMAGE_TAG="${IMAGE_TAG:-latest}"
IMAGE="${IMAGE_NAME}:${IMAGE_TAG}"

PROJECT_ID="broad-dsde-dev"

# Helper function to fetch secrets
fetch_secret() {
  gcloud secrets versions access latest --project "$PROJECT_ID" --secret "$1"
}
mkdir -p config

echo "Copying template files to config/ ..."
#Files to copy directly to config##
cp local-dev/templates/docker-rsync-local-orch.sh config/docker-rsync-local-orch.sh
cp local-dev/templates/local-agora.conf config/local-agora.conf
cp local-dev/templates/local-rawls.conf config/local-rawls.conf
cp local-dev/templates/local-sam.conf config/local-sam.conf
cp local-dev/templates/local-thurloe.conf config/local-thurloe.conf
cp local-dev/templates/mod_security_ignore.conf config/mod_security_ignore.conf
cp local-dev/templates/oauth2.conf config/oauth2.conf
cp local-dev/templates/site.conf config/site.conf

echo "Template files copied."

echo "Fetching server certs..."
gcloud container clusters get-credentials --zone us-central1-a --project broad-dsde-dev terra-dev
kubectl -n local-dev get secrets local-dev-cert -o 'go-template={{index .data "tls.crt"}}' | base64 --decode > config/server.crt
kubectl -n local-dev get secrets local-dev-cert -o 'go-template={{index .data "tls.key"}}' | base64 --decode > config/server.key
kubectl -n local-dev get configmaps kube-root-ca.crt -o 'go-template={{ index .data "ca.crt" }}' > config/ca-bundle.crt
echo "Certs fetched."

echo "Fetching secrets from GSM..."
##Files to download from secrets##
##TODO move/get these secrets from GSM
fetch_secret "firecloud-sa" > config/firecloud-account.json
fetch_secret "firecloud-sa" > config/firecloud-account.pem
fetch_secret "rawls-sa" > config/rawls-account.json
fetch_secret "rawls-sa" > config/rawls-account.pem

## Secrets to pull for firecloud-orchestration.conf ##
B2C_APPID_JSON=$(fetch_secret "b2c-application-id")
RAWLS_SAKEY_JSON=$(fetch_secret "rawls-sa")
FIRECLOUD_SECRETS=$(fetch_secret "firecloud-misc-secrets")
FIRECLOUD_SAKEY_JSON=$(fetch_secret "firecloud-sa")

# Extract the secret values using jq
FIRECLOUD_CLIENT_EMAIL=$(echo "$FIRECLOUD_SAKEY_JSON" | jq -r '.client_email')
RAWLS_CLIENT_EMAIL=$(echo "$RAWLS_SAKEY_JSON" | jq -r '.client_email')
FIRECLOUD_ID=$(echo "$FIRECLOUD_SECRETS" | jq -r '.firecloud_id')
B2C_APP_ID=$(echo "$B2C_APPID_JSON" | jq -r '.value')

echo "Secrets fetched."
# Define the template and output file paths
ORCH_TEMPLATE_FILE="local-dev/templates/firecloud-orchestration.conf"
ORCH_OUTPUT_FILE="config/firecloud-orchestration.conf"

echo "Generating firecloud-orchestration.conf..."
# Replace placeholders in the template file with the fetched secret values
sed -e "s/{{ \$b2cAppId }}/$B2C_APP_ID/" \
    -e "s/{{ \$firecloudSaKey.client_email }}/$FIRECLOUD_CLIENT_EMAIL/" \
    -e "s/{{ \$rawlsSaKey.client_email }}/$RAWLS_CLIENT_EMAIL/" \
    -e "s/{{ \$commonSecrets.firecloud_id }}/$FIRECLOUD_ID/" \
    "$ORCH_TEMPLATE_FILE" > "$ORCH_OUTPUT_FILE"
echo "firecloud-orchestration.conf generated."

cat <<EOF

Don't forget to add the local.dsde-dev.broadinstitute.org alias to your hosts file!

$ sudo sh -c "echo '127.0.0.1       local.dsde-dev.broadinstitute.org' >> /etc/hosts"

EOF

