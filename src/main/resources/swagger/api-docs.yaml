swagger: '2.0'

info:
  title: FireCloud
  description: |
    Genome analysis execution service.
  version: "0.1"
  license:
    name: BSD
    url: http://opensource.org/licenses/BSD-3-Clause
  termsOfService: https://github.com/broadinstitute/firecloud-orchestration

basePath: /

produces:
  - application/json

security:
  - googleoauth:
    - openid
    - email
    - profile

securityDefinitions:
  googleoauth:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
      email: email authorization
      profile: profile authorization
      https://www.googleapis.com/auth/cloud-billing: GCS billing

##########################################################################################
## PATHS
##########################################################################################
paths:

  /api/billing:
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        204:
          description: Successfully Created Billing Project in FireCloud and Google
        400:
          description: FireCloud billing user must be an admin of the billing account
          schema:
            $ref: '#/definitions/ErrorReport'
        403:
          description: You must be an admin of the google billing account
          schema:
            $ref: '#/definitions/ErrorReport'
        409:
          description: project already exists in FireCloud or google
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: body
          description: create project request
          name: createProjectRequest
          required: true
          schema:
            $ref: '#/definitions/CreateRawlsBillingProjectFullRequest'
      tags:
        - Billing
      summary: create billing project in FireCloud and google
      operationId: createBillingProjectFull
      security:
        - googleoauth:
          - openid
          - email
          - profile
          - https://www.googleapis.com/auth/cloud-billing

  /api/billing/{projectId}/members:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingProjectMember'
        403:
          description: You must be a project owner to view the members of a project
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
      tags:
        - Billing
      summary: list members of billing project the caller owns
      operationId: listBillingProjectMembers
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/billing/{projectId}/{workbenchRole}/{email}:
    put:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Successfully Added User To Billing Project
        403:
          description: You must be a project owner to add a user to a billing project
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: role of user for project
          name: workbenchRole
          required: true
          type: string
          enum: ["user", "owner"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - Billing
      summary: add user to billing project the caller owns
      operationId: addUserToBillingProject
      security:
        - googleoauth:
          - openid
          - email
          - profile
    delete:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Successfully Removed User From Billing Project
        403:
          description: You must be a project owner to add a user to a billing project
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: role of user for project
          name: workbenchRole
          required: true
          type: string
          enum: ["user", "owner"]
        - in: path
          description: email of user or group to remove
          name: email
          required: true
          type: string
      tags:
        - Billing
      summary: remove user from billing project the caller owns
      operationId: removeUserFromBillingProject
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/billing/{projectId}/googleRole/{role}/{email}:
    put:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Successfully Granted Google Role to User
        403:
          description: You must be a project owner granting a role on the whitelist
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: google role of user for project
          name: role
          required: true
          type: string
        - in: path
          description: email of user
          name: email
          required: true
          type: string
      tags:
        - Billing
      summary: grant a google role to a user and their pet in the billing project the caller owns
      operationId: grantGoogleRoleToUser
      security:
        - googleoauth:
          - openid
          - email
          - profile
    delete:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Successfully Removed Google Role from User
        403:
          description: You must be a project owner removing a role on the whitelist
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: google role of user for project
          name: role
          required: true
          type: string
        - in: path
          description: email of user
          name: email
          required: true
          type: string
      tags:
        - Billing
      summary: remove a google role from a user and their pet in the billing project the caller owns
      operationId: removeGoogleRoleFromUser
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/configurations:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      tags:
      - Method Repository
      operationId: listMethodRepositoryConfigurations
      summary: |
        List Method Repository configurations.
      description: |
        The configurations endpoint returns all configurations the requester
        has permissions to read that fit the filter criteria.
      parameters:
        - name: namespace
          in: query
          description: Namespace of configuration.
          required: false
          type: string
        - name: name
          in: query
          description: Name of configuration.
          required: false
          type: string
        - name: snapshotId
          in: query
          description: Snapshot ID of configuration.
          required: false
          type: number
        - name: snapshotComment
          in: query
          description: Snapshot comment of AgoraEntity
          required: false
          type: string
        - name: synopsis
          in: query
          description: Synopsis of configuration.
          required: false
          type: string
        - name: documentation
          in: query
          description: Documentation of configuration.
          required: false
          type: string
        - name: owner
          in: query
          description: Owner of configuration.
          required: false
          type: string
        - name: payload
          in: query
          description: Payload of configuration in WDL.
          required: false
          type: string
        - name: entityType
          in: query
          description: Type of configuration - Task or Workflow
          required: false
          type: string
        ########### disabled until these work in Agora
        # - name: excludedFields
        #   in: query
        #   description: Fields to exclude in JSON response.
        #   required: false
        #   type: string
        # - name: includedFields
        #   in: query
        #   description: Fields to include in JSON response
        #   required: false
        #   type: string
      responses:
        200:
          description: An array of configurations.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      x-passthrough: true
      x-passthrough-target: agora
      summary: Add a configuration.
      description: |
        Inserts a method configuration into the method repository and
        gives the owner full access permissions. Must supply a namespace,
        name, payload, and entityType. Cannot supply a snapshotId
      parameters:
        - name: body
          in: body
          description: Agora Entity
          required: false
          schema:
            $ref: '#/definitions/ConfigurationQuery'
      tags:
        - Method Repository
      responses:
        201:
          description: Method successfully added.
          schema:
            $ref: '#/definitions/ConfigurationResponse'
        400:
          description: Malformed input.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'

  /api/configurations/{namespace}/{name}/{snapshotId}:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      tags:
        - Method Repository
      operationId: getMethodRepositoryConfiguration
      summary: Get a Method Repository configuration
      parameters:
        - $ref: '#/parameters/configNamespaceParam'
        - $ref: '#/parameters/configNameParam'
        - $ref: '#/parameters/configSnapshotId'
        - name: payloadAsObject
          in: query
          description: Instead of returning a string under key payload, return a JSON object under key payloadObject
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: Method Repository configuration detail
          schema:
            $ref: '#/definitions/ConfigurationResponse'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      x-passthrough: true
      x-passthrough-target: agora
      tags:
        - Method Repository
      summary: Redact a single configuration.
      description: |
        Redacts a configuration and all of its associated configurations
      parameters:
        - $ref: '#/parameters/configNamespaceParam'
        - $ref: '#/parameters/configNameParam'
        - $ref: '#/parameters/configSnapshotId'
      responses:
        200:
          description: >
            An integer showing how many configurations were deleted. Should be
            1.
          schema:
            type: number
        default:
          description: Error upon redaction
          schema:
            $ref: '#/definitions/Error'

  /api/configurations/{namespace}/{name}/{snapshotId}/permissions:
    get:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: getConfigACL
      summary: get ACL permissions on a Method Repository configuration
      parameters:
        - $ref: '#/parameters/configNamespaceParam'
        - $ref: '#/parameters/configNameParam'
        - $ref: '#/parameters/configSnapshotId'
      responses:
        200:
          description: the indicated configuration ACL
          schema:
            $ref: '#/definitions/MethodConfigACL'
        500:
          description: Internal Server Error
    post:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: setConfigACL
      summary: set ACL permissions on a Method Repository configuration
      parameters:
        - $ref: '#/parameters/configNamespaceParam'
        - $ref: '#/parameters/configNameParam'
        - $ref: '#/parameters/configSnapshotId'
        - $ref: '#/parameters/configACLPayload'
      responses:
        200:
          description: the indicated configuration ACL once the posted changes have been applied
          schema:
            $ref: '#/definitions/MethodConfigACL'
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /api/configurations/{namespace}/permissions:
    get:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: getConfigNamespaceACL
      summary: get ACL permissions on a Method Repository Configuration Namespace
      parameters:
        - $ref: '#/parameters/configNamespaceParam'
      responses:
        200:
          description: List of the indicated configuration namespace ACL permissions
          schema:
            $ref: '#/definitions/MethodConfigACL'
        403:
          description: user does not have correct permissions to manage namespace permissions or the indicated namespace was not found
        500:
          description: Internal Server Error
    post:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: setConfigNamespaceACL
      summary: set ACL permissions on a Method Repository Configuration Namespace
      parameters:
        - $ref: '#/parameters/configNamespaceParam'
        - $ref: '#/parameters/configACLPayload'
      responses:
        200:
          description: the indicated configuration ACL once the posted changes have been applied
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodConfigACL'
        400:
          description: Invalid content format
        403:
          description: User does not have correct permissions to manage namespace permissions or the indicated namespace was not found
        500:
          description: Internal Server Error

  /api/groups:
    get:
      x-passthrough: false
      responses:
        200:
          description: Successfully listed group membership
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedGroupAccessResponse'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      tags:
        - Groups
      summary: get the list of the groups that the caller is a member of
      operationId: getGroups
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/workflows/{version}/{id}/abort:
    post:
      x-passthrough: true
      x-passthrough-target: cromiam
      summary: Abort a workflow based on workflow id
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
      tags:
        - CromIAM Workflows (for Job Manager)
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowAbortResponse'
        '400':
          description: Malformed Workflow ID
        '403':
          description: Workflow in terminal status
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/workflows/{version}/{id}/backend/metadata/{backendId}:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      summary: Get backend (e.g. PAPI) metadata for a job
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: backendId
          description: Backend ID, must be a job that is part of the workflow
          required: true
          type: string
          in: path
      tags:
        - CromIAM Workflows (for Job Manager)
      responses:
        '200':
          description: Successful Request, format is backend dependent
        '404':
          description: Workflow or Backend ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/workflows/{version}/{id}/labels:
    patch:
      x-passthrough: true
      x-passthrough-target: cromiam
      summary: Add new labels or update values for existing label keys by workflow id.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: labels
          description: >
            Custom labels submitted as JSON.
            Example: {"key-1":"value-1","key-2":"value-2"}
          required: true
          in: body
          schema:
            type: object
      tags:
        - CromIAM Workflows (for Job Manager)
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/LabelsResponse'
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/workflows/{version}/{id}/metadata:
    get:
      x-passthrough: true
      x-passthrough-target: cromiam
      summary: Query for workflow and call-level metadata for a specified workflow
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: id
          description: Workflow ID
          required: true
          type: string
          in: path
        - name: includeKey
          description: >
            When specified key(s) to include from the metadata. Matches any key starting with the value. May not be
            used with excludeKey.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: excludeKey
          description: >
            When specified key(s) to exclude from the metadata. Matches any key starting with the value. May not be
            used with includeKey.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: expandSubWorkflows
          description: >
            When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.
          required: false
          type: boolean
          default: false
          in: query
      tags:
        - CromIAM Workflows (for Job Manager)
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowMetadataResponse'
          examples:
            {
              "workflowName": "example",
              "calls": {
                "example.gather": [{
                  "executionStatus": "Done",
                  "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-gather/stdout",
                  "shardIndex": -1,
                  "outputs": {
                    "str": "_one_\n_two_\n_three_\n_four_"
                  },
                  "inputs": {
                    "array": "analysis.out"
                  },
                  "returnCode": 0,
                  "backend": "Local",
                  "end": "2015-12-11T16:53:23.000-05:00",
                  "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-gather/stderr",
                  "executionEvents": [{
                    "description": "execution event - only one in this call, some calls might have none!",
                    "startTime": "2015-12-11T16:53:23.000-05:00",
                    "endTime": "2015-12-11T16:53:23.000-05:00"
                  }],
                  "start": "2015-12-11T16:53:23.000-05:00"
                }],
                "example.prepare": [{
                  "executionStatus": "Done",
                  "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-prepare/stdout",
                  "shardIndex": -1,
                  "outputs": {
                    "array": ["one", "two", "three", "four"]
                  },
                  "inputs": {
                  },
                  "returnCode": 0,
                  "backend": "Local",
                  "end": "2015-12-11T16:53:22.000-05:00",
                  "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-prepare/stderr",
                  "executionEvents": [],
                  "start": "2015-12-11T16:53:21.000-05:00"
                }],
                "example.analysis": [{
                  "executionStatus": "Done",
                  "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/stdout",
                  "shardIndex": 0,
                  "outputs": {
                    "out": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/a.txt"
                  },
                  "inputs": {
                    "str": "x"
                  },
                  "returnCode": 0,
                  "backend": "Local",
                  "end": "2015-12-11T16:53:23.000-05:00",
                  "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/stderr",
                  "executionEvents": [],
                  "start": "2015-12-11T16:53:22.000-05:00"
                }, {
                  "executionStatus": "Done",
                  "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/stdout",
                  "shardIndex": 1,
                  "outputs": {
                    "out": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/a.txt"
                  },
                  "inputs": {
                    "str": "x"
                  },
                  "returnCode": 0,
                  "backend": "Local",
                  "end": "2015-12-11T16:53:23.000-05:00",
                  "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/stderr",
                  "executionEvents": [],
                  "start": "2015-12-11T16:53:22.000-05:00"
                }, {
                  "executionStatus": "Done",
                  "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/stdout",
                  "shardIndex": 2,
                  "outputs": {
                    "out": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/a.txt"
                  },
                  "inputs": {
                    "str": "x"
                  },
                  "returnCode": 0,
                  "backend": "Local",
                  "end": "2015-12-11T16:53:23.000-05:00",
                  "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/stderr",
                  "executionEvents": [],
                  "start": "2015-12-11T16:53:22.000-05:00"
                }, {
                  "executionStatus": "Done",
                  "stdout": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/stdout",
                  "shardIndex": 3,
                  "outputs": {
                    "out": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/a.txt"
                  },
                  "inputs": {
                    "str": "x"
                  },
                  "returnCode": 0,
                  "backend": "Local",
                  "end": "2015-12-11T16:53:23.000-05:00",
                  "stderr": "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/stderr",
                  "executionEvents": [],
                  "start": "2015-12-11T16:53:22.000-05:00"
                }]
              },
              "outputs": {
                "example.analysis.out": ["/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-0/a.txt", "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-1/a.txt", "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-2/a.txt", "/cromwell/cromwell-executions/example/e552029e-4b9a-48e9-b11f-6e5d6d0dccc4/call-analysis/shard-3/a.txt"],
                "example.gather.str": "_one_\n_two_\n_three_\n_four_",
                "example.prepare.array": ["one", "two", "three", "four"]
              },
              "id": "e552029e-4b9a-48e9-b11f-6e5d6d0dccc4",
              "inputs": {
                "test.hello.name": "chris",
                "blah2.grep.pattern": "h",
                "blah2.cat.asdf": "gs://cromwell-root/blah/c0c116ef-aac6-4029-8d0a-70d86b17c843/call-ls/job.stdout.txt",
                "blah.grep.pattern": "v",
                "blah.ls.pattern": "./"
              },
              "submission": "2015-12-11T16:53:21.000-05:00",
              "status": "Succeeded",
              "end": "2015-12-11T16:53:23.000-05:00",
              "start": "2015-12-11T16:53:21.000-05:00"
            }
        '400':
          description: Malformed Workflow ID
        '404':
          description: Workflow ID Not Found
        '500':
          description: Internal Error
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/workflows/{version}/query:
    get:
      x-passthrough: true
      x-passthrough-target: cromiam
      summary: Query workflows by start dates, end dates, names, ids, or statuses.
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
        - name: start
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or later start datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: end
          required: false
          type: string
          format: date-time
          in: query
          description: >
            Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
            If both start and end date are specified, start date must be before or equal to end date.
        - name: status
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          enum:
            - Submitted
            - Running
            - Aborting
            - Failed
            - Succeeded
            - Aborted
          description: >
            Returns only workflows with the specified status.  If specified multiple times,
            returns workflows in any of the specified statuses.
        - name: name
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
          description: >
            Returns only workflows with the specified name.  If specified multiple times,
            returns workflows with any of the specified names.
        - name: id
          required: false
          in: query
          type: array
          items:
            type: string
          collectionFormat: multi
          pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
          description: >
            Returns only workflows with the specified workflow id.  If specified multiple times,
            returns workflows with any of the specified workflow ids.
      tags:
        - CromIAM Workflows (for Job Manager)
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '403':
          description: Malformed Request
        '500':
          description: Internal Error
      security:
        - googleoauth:
            - openid
            - email
            - profile
    post:
      x-passthrough: true
      x-passthrough-target: cromiam
      summary: Query workflows by start dates, end dates, names, ids, or statuses.
      parameters:
        - name: version
          description: API version
          required: true
          type: string
          in: path
          default: v1
        - name: parameters
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkflowQueryParameter'
          description: >
            Same query parameters as GET /query endpoint, submitted as a json list.
            Example: [{"status":"Success"},{"status":"Failed"}]
      tags:
        - CromIAM Workflows (for Job Manager)
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueryResponse'
        '400':
          description: Malformed Request
        '500':
          description: Internal Error
      security:
        - googleoauth:
            - openid
            - email
            - profile

  '/api/womtool/{version}/describe':
    post:
      x-passthrough: true
      x-passthrough-target: cromiam
      operationId: describe
      summary: Machine-readable description of a workflow, including inputs and outputs
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/versionParam'
        - name: workflowSource
          description: The workflow source file to submit for execution. Either workflow source or workflow url is required.
          required: false
          type: file
          in: formData
        - name: workflowUrl
          description: URL which points to the workflow. Either workflow source or workflow url is required.
          required: false
          type: string
          in: formData
        - name: workflowInputs
          description: JSON or YAML file containing the inputs as an object.
          required: false
          type: file
          in: formData
        - $ref: '#/parameters/workflowTypeParam'
        - $ref: '#/parameters/workflowTypeVersionParam'
      responses:
        '200':
          description: Workflow description.
          schema:
            $ref: '#/definitions/WorkflowDescription'
      tags:
        - "Womtool"

  /engine/{version}/version:
    get:
      x-passthrough: true
      x-passthrough-target: cromiam
      summary: Returns the version of the Cromwell Engine
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
      tags:
        - CromIAM Engine (for Job Manager)
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/VersionResponse'

  /engine/{version}/status:
    get:
      x-passthrough: true
      x-passthrough-target: cromiam
      summary: Returns the current health status of any monitored subsystems
      parameters:
        - name: version
          description: API Version
          required: true
          type: string
          in: path
          default: v1
      tags:
        - CromIAM Engine (for Job Manager)
      responses:
        '200':
          description: All subsystems report an "ok" status
          schema:
            $ref: '#/definitions/StatusResponse'
        '500':
          description: At least one subsystem does not have an "ok" status
          schema:
            $ref: '#/definitions/StatusResponse'

  /api/groups/{groupName}:
    get:
      x-passthrough: false
      responses:
        200:
          description: Successfully loaded group
          schema:
            $ref: '#/definitions/ManagedGroupWithMembers'
        403:
          description: You must be an admin of this group in order to view members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - Groups
      summary: view the members in a group
      operationId: getGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile
    post:
      x-passthrough: false
      responses:
        201:
          description: Successfully created group
          schema:
            $ref: '#/definitions/ManagedGroupWithMembers'
        409:
          description: Group already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - Groups
      summary: create a new group
      operationId: createGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile
    delete:
      x-passthrough: false
      responses:
        204:
          description: Successfully Deleted Group
        403:
          description: You must be an admin of this group in order to delete it
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        409:
          description: Group is in use and cannot be deleted
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - Groups
      summary: delete a group that the caller owns
      operationId: deleteGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/groups/{groupName}/requestAccess:
    post:
      x-passthrough: false
      responses:
        204:
          description: Successfully requested access
        404:
          description: Group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - Groups
      summary: request access to a group
      operationId: requestAccessToGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/groups/{groupName}/{role}/{email}:
    put:
      x-passthrough: false
      responses:
        204:
          description: Successfully Added User To Group
        403:
          description: You must be an admin of this group in order to add members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
        - in: path
          description: role of user for group
          name: role
          required: true
          type: string
          enum: ["member", "admin"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - Groups
      summary: add a user to a group the caller owns
      operationId: addUserToGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile
    delete:
      x-passthrough: false
      responses:
        204:
          description: Successfully Removed User From Group
        403:
          description: You must be an admin of this group in order to remove members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
        - in: path
          description: role of user for group
          name: role
          required: true
          type: string
          enum: ["member", "admin"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - Groups
      summary: remove a user from a group the caller owns
      operationId: removeUserFromGroup
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/inputsOutputs:
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Method Repository
      operationId: getMethodIO
      summary: Get information about a method's inputs and outputs
      parameters:
        - name: methodName
          description: name of Method to look up
          required: true
          in: body
          schema:
            $ref: '#/definitions/MethodID'
      responses:
        200:
          description: Method Configuration inputs and outputs
        400:
          description: Method WDL can't be parsed
        404:
          description: No Such Method
        500:
          description: Internal Server Error

  /api/library/admin/reindex:
    post:
      x-passthrough: false
      tags:
        - Library
      operationId: reindexAll
      summary: |
        deletes and rebuilds the entire index of published library datasets
      responses:
        200:
          description: Indexing Success
          schema:
            $ref: '#/definitions/LibraryBulkIndexResponse'
        204:
          description: No published datasets exist to index
          schema:
            type: string
        500:
          description: Indexing Error
          schema:
            $ref: '#/definitions/LibraryBulkIndexResponse'

  /api/library/groups:
    get:
      x-passthrough: false
      tags:
        - Library
      operationId: groups
      summary: |
        returns groups that can be used for discoverable datasets
      responses:
        200:
          description: Names of the allowed groups
          schema:
            type: array
            items:
              type: string

  /api/library/search:
    post:
      x-passthrough: false
      tags:
        - Library
      operationId: FindDocuments
      summary: |
        searches published library datasets
      parameters:
        - in: body
          name: searchParams
          description: Search terms and pagination parameters
          schema:
            $ref: '#/definitions/SearchTermRef'
      responses:
        200:
          description: Matching datasets

  /api/library/suggest:
    post:
      x-passthrough: false
      tags:
        - Library
      operationId: searchSuggest
      summary: |
        search suggestions
      parameters:
        - in: body
          name: searchParams
          description: Search terms and pagination parameters
          schema:
            $ref: '#/definitions/SearchTermRef'
      responses:
        200:
          description: Search suggestions, with highlighting

  /api/library/populate/suggest/{field}:
    get:
      x-passthrough: false
      tags:
        - Library
      operationId: populateSuggest
      summary: |
        suggestions for populating a field
      parameters:
        - in: path
          name: field
          description: the property to get suggestions for
          type: string
          required: true
        - in: query
          name: q
          type: string
          required: true
          description: the initial text to complete
      responses:
        200:
          description: Field specific suggestions
        400:
          description: Bad Request, specified field that was not configured for suggestions
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/library/user/role/curator:
    get:
      x-passthrough: false
      responses:
        200:
          description: are you a curator?
          schema:
            $ref: '#/definitions/CuratorStatus'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: "gets the curator status of a user"
      tags:
        - Profile
      summary: Query to see if you're a library curator
      operationId: isCurator

  /api/library/{workspaceNamespace}/{workspaceName}/discoverableGroups:
    get:
      x-passthrough: false
      tags:
        - Library
      operationId: getDiscoverableGroups
      summary: |
        get the groups that can discover this library dataset
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: The groups that can discover the dataset
          schema:
            $ref: '#/definitions/StringArray'
        403:
          description: Insufficient permissions
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Error
          schema:
            $ref: '#/definitions/ErrorReport'
    put:
      x-passthrough: false
      tags:
        - Library
      operationId: updateDiscoverableGroups
      summary: |
        set the groups that can discover this library dataset
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: discoverableGroups
          description: Json array of group names, or empty array for no restrictions
          required: true
          in: body
          schema:
            $ref: '#/definitions/StringArray'
      responses:
        200:
          description: The workspace, after assigning groups to be able to discover the dataset
          schema:
            $ref: '#/definitions/Workspace'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorReport'
        403:
          description: Insufficient permissions to change catalog permissions (must be owner or have grant or catalog with access to the workspace)
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Workspace, user or group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Error
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/library/{workspaceNamespace}/{workspaceName}/metadata:
    get:
      x-passthrough: false
      tags:
        - Library
      operationId: getLibraryMetadata
      summary: |
        get the entire metadata for a library dataset
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/LibraryMetadataInput'
        404:
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
    put:
      x-passthrough: false
      tags:
        - Library
      operationId: putLibraryMetadata
      summary: |
        put the entire metadata for a library dataset
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: validate
          description: >
            Should the payload be validated? Validation is always enabled
            for published datasets and defaults to false for unpublished datasets.
          in: query
          type: boolean
          required: false
        - name: libraryMetadataJson
          description: Library metadata
          required: true
          in: body
          schema:
            $ref: '#/definitions/LibraryMetadataInput'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Workspace'
        404:
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/library/{workspaceNamespace}/{workspaceName}/published:
    post:
      x-passthrough: false
      tags:
        - Library
      operationId: publishLibraryWorkspace
      summary: |
        publish the workspace in the Library
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Workspace'
        204:
          description: Dataset already in requested published state
        403:
          description: You must be the workspace owner and library curator to publish a workspace to the library
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
    delete:
      x-passthrough: false
      tags:
        - Library
      operationId: unpublishLibraryWorkspace
      summary: |
        unpublish the workspace in the Library
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Workspace'
        403:
          description: You must be the workspace owner and library curator to unpublish a workspace from the library
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/methods:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      tags:
        - Method Repository
      operationId: listMethodRepositoryMethods
      summary: |
        Lists Method Repository methods.
      parameters:
        - name: namespace
          in: query
          description: Namespace of method.
          required: false
          type: string
        - name: name
          in: query
          description: Name of method.
          required: false
          type: string
        - name: snapshotId
          in: query
          description: Snapshot ID of method.
          required: false
          type: number
        - name: snapshotComment
          in: query
          description: Snapshot comment of AgoraEntity
          required: false
          type: string
        - name: synopsis
          in: query
          description: Synopsis of method.
          required: false
          type: string
        - name: documentation
          in: query
          description: Documentation of method.
          required: false
          type: string
        - name: owner
          in: query
          description: Owner of method.
          required: false
          type: string
        - name: payload
          in: query
          description: Payload of method in WDL.
          required: false
          type: string
        - name: entityType
          in: query
          description: Type of Method - Task or Workflow
          required: false
          type: string
        ########### disabled until these work in Agora
        # - name: excludedFields
        #   in: query
        #   description: Fields to exclude in JSON response.
        #   required: false
        #   type: string
        # - name: includedFields
        #   in: query
        #   description: Fields to include in JSON response
        #   required: false
        #   type: string
      responses:
        200:
          description: An array of methods.
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      x-passthrough: true
      x-passthrough-target: agora
      summary: Add a Method.
      description: |
        Inserts a method into the method repository and
        gives the owner full access permissions. Must supply a namespace
        name, payload, and entityType. Cannot supply a snapshotId
      tags:
        - Method Repository
      parameters:
        - name: body
          in: body
          description: Agora Entity
          required: false
          schema:
            $ref: '#/definitions/MethodQuery'
      responses:
        201:
          description: Method successfully added.
          schema:
            $ref: '#/definitions/MethodResponse'
        400:
          description: Malformed input.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'

  /api/methods/definitions:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: List method definitions
      description: |
        List method definitions - i.e. unique namespace/name pairs - with counts
        of snapshots and associated configurations
      tags:
        - Method Repository
      responses:
        200:
          description: An array of method definitions.
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodDefinition'
        500:
          description: Internal error.
          schema:
            $ref: '#/definitions/Error'

  /api/methods/{namespace}/{name}/configurations:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: List configurations associated with a method
      description: |
        Given the namespace/name of a method, returns all configurations
        in the repository that reference that method
      parameters:
        - name: namespace
          in: path
          description: Namespace of method.
          required: true
          type: string
        - name: name
          in: path
          description: Name of method.
          required: true
          type: string
      tags:
        - Method Repository
      responses:
        200:
          description: An array of configurations.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationResponseWithPayloadObject'
        404:
          description: Method not found.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /api/methods/{namespace}/{name}/{snapshotId}:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      tags:
        - Method Repository
      summary: Find a single method.
      description: |
        Returns one method that matches the namespace,
        name, and snapshotId.
      parameters:
        - $ref: '#/parameters/methodNamespaceParam'
        - $ref: '#/parameters/methodNameParam'
        - $ref: '#/parameters/methodSnapshotId'
        - name: onlyPayload
          in: query
          description: Boolean to return only the payload of the method.
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: A single method.
          schema:
            $ref: '#/definitions/MethodResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      x-passthrough: true
      x-passthrough-target: agora
      tags:
        - Method Repository
      summary: Redact a single method.
      description: |
        Redacts a method and all of its associated configurations
      parameters:
        - $ref: '#/parameters/methodNamespaceParam'
        - $ref: '#/parameters/methodNameParam'
        - $ref: '#/parameters/methodSnapshotId'
      responses:
        200:
          description: |
            An integer showing how many methods were deleted.
          schema:
            type: number
        default:
          description: Error upon redaction
          schema:
            $ref: '#/definitions/Error'
    post:
      x-passthrough: true
      x-passthrough-target: agora
      tags:
        - Method Repository
      summary: Create a new snapshot of an existing Method.
      description: |
        Inserts a new snapshot of the method into the method repository and
        copies access permissions from previous snapshot, optionally redacting
        the source snapshot. Documentation, synopsis, and payload are the only
        arguments considered for the new snapshot; everything else is copied
        from the source.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/methodNamespaceParam'
        - $ref: '#/parameters/methodNameParam'
        - $ref: '#/parameters/methodSnapshotId'
        - name: redact
          in: query
          description: Should the source method be redacted?
          required: false
          type: boolean
          default: false
        - name: body
          in: body
          description: Agora Entity
          required: false
          schema:
            type: object
            properties:
              synopsis:
                type: string
                description: Synopsis which contains AgoraEntity.
                default: Quickly aligns short nucleotide sequences.
              documentation:
                type: string
                description: Documentation of the AgoraEntity.
                default: |
                  BWA is a software package for mapping low-divergent sequences
                  against a large reference genome, such as the human genome.
                  It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
              payload:
                type: string
                description: Payload of method -- must be in WDL format
                default: >
                  task wc {File in_file command { cat ${in_file} | wc -l } output { Int
                  count = read_int(stdout()) }}
              snapshotComment:
                type: string
                description: Snapshot comment of the AgoraEntity
                default: Improve spline reticulation
      responses:
        '200':
          description: Method successfully copied.
          schema:
            $ref: '#/definitions/MethodResponse'
        '206':
          description: Method successfully copied, but error while redacting.
        '400':
          description: Malformed input.
        '403':
          description: Forbidden to create copy.
        '404':
          description: Source snapshot not found.
        '500':
          description: Internal error.

  /api/methods/{namespace}/{name}/{snapshotId}/configurations:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: List compatible configurations for this method snapshot
      description: |
        Returns all configurations that 1. have the exact same input and output
        arguments as the supplied method snapshot, and 2. reference any snapshot
        of this method.
      parameters:
        - $ref: '#/parameters/methodNamespaceParam'
        - $ref: '#/parameters/methodNameParam'
        - $ref: '#/parameters/methodSnapshotId'
      tags:
        - Method Repository
      responses:
        200:
          description: An array of configurations.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationResponseWithPayloadObject'
        404:
          description: Method not found.
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/methods/{namespace}/{name}/{snapshotId}/permissions:
    get:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: getMethodACL
      summary: get ACL permissions on a Method Repository method
      parameters:
        - $ref: '#/parameters/methodNamespaceParam'
        - $ref: '#/parameters/methodNameParam'
        - $ref: '#/parameters/methodSnapshotId'
      responses:
        200:
          description: the indicated method ACL
          schema:
            $ref: '#/definitions/MethodConfigACL'
        500:
          description: Internal Server Error
    post:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: setMethodACL
      summary: set ACL permissions on a Method Repository method
      parameters:
        - $ref: '#/parameters/methodNamespaceParam'
        - $ref: '#/parameters/methodNameParam'
        - $ref: '#/parameters/methodSnapshotId'
        - $ref: '#/parameters/configACLPayload'
      responses:
        200:
          description: the indicated method ACL once the posted changes have been applied
          schema:
            $ref: '#/definitions/MethodConfigACL'
        400:
          description: Bad Request
        500:
          description: Internal Server Error

  /api/methods/{namespace}/permissions:
    get:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: getMethodNamespaceACL
      summary: get ACL permissions on a Method Repository Method Namespace
      parameters:
        - $ref: '#/parameters/methodNamespaceParam'
      responses:
        200:
          description: List of indicated method namespace ACL permissions
          schema:
            $ref: '#/definitions/MethodConfigACL'
        403:
          description: user does not have correct permissions to manage namespace permissions or the indicated namespace was not found
        500:
          description: Internal Server Error
    post:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: setMethodNamespaceACL
      summary: set ACL permissions on a Method Repository Method Namespace
      parameters:
        - $ref: '#/parameters/methodNamespaceParam'
        - $ref: '#/parameters/configACLPayload'
      responses:
        200:
          description: the indicated method namespace ACL permissions once the posted changes have been applied
          schema:
            $ref: '#/definitions/MethodConfigACL'
        400:
          description: Invalid content format
        403:
          description: User does not have correct permissions to manage namespace permissions or the indicated namespace was not found
        500:
          description: Internal Server Error

  /api/methods/permissions:
    put:
      x-passthrough: false
      tags:
        - Method Repository
      operationId: multiUpsertMethodsACL
      summary: set ACLs for multiple methods in one call
      produces:
        - application/json
        - text/plain
      parameters:
        - name: methodacls
          description: method acls to upsert
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodAclPair'
      responses:
        200:
          description: the indicated method namespace ACL permissions once the posted changes have been applied
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodAclPair'
        400:
          description: Invalid content format
        500:
          description: Internal Server Error

  /api/nih/callback:
    post:
      x-passthrough: false
      tags:
        - NIH
      operationId: NIHCallback
      summary: Updates a user's NIH link from a JWT
      parameters:
        - name: jwt
          description: JWT from NIH login
          required: true
          in: body
          schema:
            $ref: '#/definitions/JWTWrapper'
      responses:
        200:
          description: Successfully updated NIH link
          schema:
            $ref: '#/definitions/NihStatus'
        400:
          description: Invalid or malformed JWT
        401:
          description: Unauthorized
        500:
          description: Internal server error saving NIH link to profile

  /api/nih/status:
    get:
      x-passthrough: false
      tags:
        - NIH
      operationId: NIHStatus
      summary: "Retrieves info about a user's NIH link"
      responses:
        200:
          description: Successfully retrieved NIH status
          schema:
            $ref: '#/definitions/NihStatus'
        404:
          description: linkedNihUsername key missing from status
        500:
          description: Internal server error retrieving NIH status

  /api/notifications/general:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationType'
      tags:
        - Notifications
      summary: Gets the general notifications available
      operationId: generalNotifications
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/notifications/workspace/{workspaceNamespace}/{workspaceName}:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationType'
      parameters:
        - in: path
          description: workspace namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: workspace name
          name: workspaceName
          required: true
          type: string
      tags:
        - Notifications
      summary: Gets the notifications available for a workspace
      operationId: workspaceNotifications
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/profile/billing:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Profile
      operationId: billing
      summary: List billing projects for a user
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingProjectMembership'
        404:
          description: User Not Found
        500:
          description: Internal Server Error

  /api/profile/billing/{projectName}:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Profile
      operationId: billingProjectStatus
      parameters:
        - name: projectName
          description: Name of the billing project
          required: true
          type: string
          in: path
      description: billing project status
      summary: billing project status
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BillingProjectStatus'
        404:
          description: Project Not Found
        500:
          description: Internal Server Error

  /api/profile/billingAccounts:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Profile
      operationId: billingAccounts
      summary: List billing accounts for a user
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BillingAccount'
        403:
          description: Forbidden - redirect to Google to enable appropriate scopes
          schema:
            $ref: '#/definitions/BillingAccountRedirect'
        500:
          description: Internal Server Error
      security:
        - googleoauth:
          - openid
          - email
          - profile
          - https://www.googleapis.com/auth/cloud-billing

  /api/profile/importstatus:
    get:
      x-passthrough: false
      tags:
        - Profile
        - Method Configurations
      operationId: importStatus
      summary: Check the user's ability to import a method config into a workspace
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserImportPermission'
        500:
          description: Internal Server Error

  /api/profile/preferences:
    post:
      x-passthrough: false
      tags:
        - Profile
      operationId: updateProfile
      summary: Update the preferences for the user
      parameters:
        - name: preferences
          in: body
          description: The preferences to set as a Map[String, String]
          required: true
          schema:
            type: object
      responses:
        204:
          description: Success (No Content)
        500:
          description: Internal Server Error

  /api/profile/terra:
    get:
      x-passthrough: false
      tags:
        - Profile
      operationId: getTerraPreference
      summary: Returns the current user's preference for Terra UI vs. Legacy view
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TerraPreference'
        500:
          description: Internal Server Error
    post:
      x-passthrough: false
      tags:
        - Profile
      operationId: setTerraPreference
      summary: Sets the current user's preference to use Terra UI, not Legacy view
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TerraPreference'
        500:
          description: Internal Server Error
    delete:
      x-passthrough: false
      tags:
        - Profile
      operationId: setFCPreference
      summary: Sets the current user's preference to use Legacy view, not Terra UI
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TerraPreference'
        500:
          description: Internal Server Error

  /api/profile/trial:
    post:
      x-passthrough: false
      tags:
        - Profile
      operationId: userTrial
      summary: Enroll or Finalize yourself in FireCloud free trial
      description: |
        * **Enroll:** starts an enabled user's trial and adds them to a billing project.
        * **Finalize:** concludes a terminated user's trial progress.
      parameters:
        - name: operation
          description: operation user can perform
          required: false
          in: query
          type: string
          enum:
            - enroll
            - finalize
          default: enroll
      responses:
        204:
          description: Success (No Content)
        400:
          description: Bad Request; invalid operation
        403:
          description: Forbidden; user must agree to terms to be enrolled
        500:
          description: Internal Server Error

  /api/profile/trial/userAgreement:
    put:
      x-passthrough: false
      tags:
        - Profile
      operationId: recordUserAgreement
      summary: Set userAgreed flag to true
      responses:
        204:
          description: NoContent; userAgreed set to true
        403:
          description: Forbidden; user is not eligible for free trial
        500:
          description: Internal Server Error

  /api/refresh-token-status:
    get:
      x-passthrough: false
      tags:
        - OAuth
      operationId: getRefreshTokenStatus
      summary: deprecated
      description: |
        This API is a deprecated noop. Previously, it returned the status of the current user's refresh token.
        Since refresh tokens are no longer used in the back end, this API is now hardcoded to respond as if the
        user's refresh token is valid. This API may be removed in a future release.
      responses:
        200:
          description: OK
          schema:
            required:
              - requiresRefresh
            properties:
              requiresRefresh:
                type: boolean

  /api/sharelog/sharees:
    get:
      x-passthrough: false
      tags:
      - ShareLog
      operationId: getSharees
      summary: |
        Get a list of users with whom current user has shared a Workspace.
      description: |
        Get a list of users with whom current user has shared a Workspace.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StringArray'
        500:
          description: Internal Error

  /api/staticNotebooks/convert:
    post:
      x-passthrough: true
      x-passthrough-target: calhoun
      produces:
        - text/html
      tags:
        - Static Notebooks
      operationId: convertNotebook
      summary: |
        Convert a Notebook ipynb file to a static HTML representation
      description: |
        Convert a Notebook ipynb file to a static HTML representation
      parameters:
        - name: notebook
          description: Notebook ipynb file
          required: true
          in: body
          schema:
            type: string
      responses:
        200:
          description: Success
        500:
          description: Internal Error

  /api/storage/{bucket}/{object}:
    get:
      x-passthrough: false
      tags:
      - Storage
      operationId: getMetadata
      summary: |
        Get metadata about an object stored in GCS.
      description: |
        Returns a subset of the metadata available from Google's Cloud Storage JSON API, as well as the estimated egress
        charge to North America. If you need the full metadata, we recommend you use Google's API directly; see
        https://cloud.google.com/storage/docs/json_api/v1/objects/get.
      parameters:
        - name: bucket
          description: Name of the bucket in which the object resides.
          required: true
          type: string
          in: path
        - name: object
          description: Name of the object. (be sure to urlencode)
          required: true
          type: string
          in: path
      responses:
        200:
          description: Success
        404:
          description: Not Found
        500:
          description: Internal Error

  /api/submissions/queueStatus:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueueStatusResponse'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List workflow counts by queueing state
      tags:
        - Submissions
      summary: workflow queue status
      operationId: workflowQueueStatus

  /api/template:
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Method Repository
      operationId: createMethodTemplate
      summary: Create a Method Configuration template from a Method
      parameters:
        - name: methodName
          description: name of Method to use for template
          required: true
          in: body
          schema:
            $ref: '#/definitions/MethodID'
      responses:
        200:
          description: Method Configuration template
        400:
          description: Method WDL can't be parsed
        404:
          description: No Such Method
        500:
          description: Internal Server Error

  /api/trial/manager/{operation}:
    post:
      x-passthrough: false
      tags:
        - Trial (FireCloud Credits)
      operationId: updateTrialUserStatus
      summary: Update user status in the FireCloud Free Credits Program; for managers of the Program only.
      description: |
        * **Enable** Add registered user(s) to FireCloud's internal record of users that are allowed to enroll (of their own accord, by clicking the Enroll button in the UI)
        * **Disable** If a user has not yet enrolled themselves, we can still remove them from the trial. Reverse of the Enable operation.
        * **Terminate** End the user's trial by removing their billing project from the FireCloud Free Credits Program billing account. The user will no longer be able to create workspaces in that billing project.
      parameters:
        - name: operation
          description: operation to perform on the specified users.
          required: true
          in: path
          type: string
          enum:
            - enable
            - disable
            - terminate
        - name: users
          description: list of users on which to operate
          required: true
          in: body
          schema:
            $ref: '#/definitions/StringArray'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TrialOperationResponse'
        204:
          description: Success (No Content)
        403:
          description: Forbidden; you must be a campaign manager to call this endpoint.
        500:
          description: Internal Server Error

  /api/trial/manager/projects:
    post:
      x-passthrough: false
      tags:
        - Trial (FireCloud Credits)
      operationId: manageTrialProjects
      summary: Manage projects in the FireCloud Free Credits Program; for managers of the Program only.
      parameters:
        - name: operation
          description: |
            operation to perform on projects.
            "Create" will create projects and verify those projects.
            "Verify" will verify all unverified projects in the pool.
            "Count" will return the number of projects in various statuses.
            "Adopt" will enter a previously-created project into the pool without verifying it.
            "Scratch" will mark a pool project as unavailable/errored and disassociate it from any user that claimed it.
            "Report" will return a report of all claimed projects.
          required: true
          in: query
          type: string
          enum:
            - create
            - verify
            - count
            - adopt
            - scratch
            - report
          default: count
        - name: count
          description: number of projects to create; only used for create operation
          required: false
          in: query
          type: number
        - name: project
          description: name of project to adopt or scratch; only used for adopt and scratch operations
          required: false
          in: query
          type: string
      responses:
        200:
          description: OK; used for verify operation
        202:
          description: Accepted; used for create operation
        400:
          description: Bad Request. Creation already in progress or incorrect credentials.
        403:
          description: You must be a campaign manager to call this endpoint.
        500:
          description: Internal Server Error

  /version:
    get:
      x-passthrough: false
      tags:
        - Version
      operationId: orchestrationVersion
      summary: Returns the currently deployed version of this service.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OrchestrationVersion'
      security: []

  /version/executionEngine:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Version
      operationId: executionEngineVersion
      summary: Returns the currently deployed version of FireCloud's execution engine
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ExecutionEngineVersion'
      security: []

  /api/workspaces:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Workspaces
      operationId: listWorkspaces
      summary: |
        Lists workspaces.
      produces:
        - application/json
        - text/plain
      responses:
        200:
          description: List of workspaces.
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Workspaces
      operationId: createWorkspace
      summary: Create workspace
      parameters:
        - name: workspace
          description: New workspace information
          required: true
          in: body
          schema:
            $ref: '#/definitions/WorkspaceIngest'
      responses:
        200:
          description: No response was specified
        201:
          description: Successful Request
        403:
          description: Unable to create bucket for workspace
        409:
          description: Workspace by that name already exists
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Workspaces
      operationId: getWorkspace
      summary: Get workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: fields
          description: >
            When specified, include only these keys in the response payload and exclude other keys.
            Accepts a comma-delimited list of values. To include a nested key, specify the key's path
            using a dot delimiter; for example, to include {"workspace": {"attributes": {}}}, specify
            "workspace.attributes". Legal values are any first-level key in the response, any first-level key
            inside the {"workspace": {}} object, and any first-level key inside the {"workspace": {"attributes": {}}}
            object.
            If omitted, will return the full response payload.
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
          in: query
      responses:
        200:
          description: Successful Request
        400:
          description: Unrecognized query parameters
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error
    delete:
      x-passthrough: false
      tags:
        - Workspaces
      operationId: deleteWorkspace
      summary: Delete workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        202:
          description: Request Accepted
        403:
          description: User does not have correct permissions to delete a published workspace
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/accessInstructions:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Workspaces
      operationId: getWorkspaceAccessInstructions
      summary: Get workspace access instructions (if any)
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedGroupAccessInstructions'
        404:
          description: Workspace not found
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/acl:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Workspaces
      operationId: getWorkspaceAcl
      summary: Get workspace ACL
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceACL'
        400:
          description: Can't retrieve ACL for workspace
        404:
          description: Workspace not found
        500:
          description: Internal Server Error
    patch:
      x-passthrough: false
      tags:
        - Workspaces
      operationId: updateWorkspaceACL
      summary: Update workspace ACL
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: query
          description: true to invite unregistered users, false to ignore
          name: inviteUsersNotFound
          required: true
          default: false
          type: boolean
        - name: aclUpdates
          description: Series of ACL updates for workspace
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceACLUpdate'
          in: body
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceACLUpdateResponseList'
        400:
          description: Can't set ACL for workspace
        404:
          description: Workspace not found
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/bucketOptions:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceBucketOptions'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Returns metadata about the workspace bucket.
      tags:
        - Workspaces
      summary: Get metadata about the workspace bucket
      operationId: getWorkspaceBucketOptions
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - googleoauth:
            - openid
            - email
            - profile

  /api/workspaces/{workspaceNamespace}/{workspaceName}/bucketUsage:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Workspaces
      operationId: getBucketUsage
      summary: Get bucket usage
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        '200':
          description: Successful Request

  /api/workspaces/{workspaceNamespace}/{workspaceName}/catalog:
    get:
      x-passthrough: false
      responses:
        200:
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceCatalog'
        404:
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get catalog permissions for a workspace
      tags:
        - Workspaces
      summary: Get workspace catalog permission
      operationId: getCatalog
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
    patch:
      x-passthrough: false
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceCatalogUpdateResponseList'
        403:
          description: Insufficient permissions to change catalog permissions (must be owner or admin)
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Workspace, user or group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Set catalog permisisons for a workspace
      tags:
        - Workspaces
      summary: Update catalog permission
      operationId: updateCatalog
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: body
          description: Series of Catalog updates for workspace
          name: catalogUpdates
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceCatalog'

  /api/workspaces/{workspaceNamespace}/{workspaceName}/checkBucketReadAccess:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      description: Read a workspace bucket
      tags:
        - Workspaces
      summary: Read workspace bucket
      operationId: readBucket
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Successful Request
        403:
          description: Insufficient permissions to access workspace bucket
        404:
          description: Workspace Not Found
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/clone:
    post:
      x-passthrough: false
      tags:
        - Workspaces
      operationId: cloneWorkspace
      summary: Clone Workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: workspace
          description: Cloned workspace information
          required: true
          in: body
          schema:
            $ref: '#/definitions/WorkspaceIngest'
      responses:
        201:
          description: Successful Request
        400:
          description: Unable to create resources for workspace
        404:
          description: Source workspace not found
        409:
          description: Destination workspace already exists
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Entities
      operationId: getEntityTypes
      summary: |
        List of entity types in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: List of entity types in workspace
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities_with_type:
    get:
      x-passthrough: false
      tags:
      - Entities
      operationId: getEntitiesWithType
      summary: |
        List of entities in a workspace with type and attribute information
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: List of entities
        404:
          description: Workspace or entities not found.
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/copy:
    post:
      x-passthrough: false
      tags:
      - Entities
      operationId: copyEntities
      summary: |
        Copy entities from one workspace to another
      parameters:
        - name: workspaceNamespace
          description: Destination Workspace Namespace
          required: true
          type: string
          in: path
        - name: workspaceName
          description: Destination Workspace Name
          required: true
          type: string
          in: path
        - name: body
          description: Entities to Copy
          required: true
          in: body
          schema:
            $ref: '#/definitions/CopyEntity'
        - name: linkExistingEntities
          description: true to link new entities to existing entities, false to fail instead of link
          required: false
          default: false
          type: boolean
          in: query
      responses:
        201:
          description: Successful Request
          schema:
            $ref: '#/definitions/EntityCopyResponse'
        404:
          description: Source Workspace or source entities does not exist
        409:
          description: There are conflicts in your copy operation. Retry with the paramater linkExistingEntities=true to link all soft conflicts to the entities that already exist in your workspace.
          schema:
            $ref: '#/definitions/EntityCopyResponse'
        422:
          description: Destination workspace must match source's authorization domain, if the source has one
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/delete:
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Entities
      operationId: deleteEntities
      summary: Bulk delete entities from a workspace
      parameters:
        - name: workspaceNamespace
          description: Workspace Namespace
          required: true
          type: string
          in: path
        - name: workspaceName
          description: Workspace Name
          required: true
          type: string
          in: path
        - name: body
          description: Entities to delete
          required: true
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityID'
      responses:
        204:
          description: Successful Request
        400:
          description: Not all Entities exist
          schema:
            $ref: '#/definitions/ErrorReport'
        409:
          description: Cannot create dangling references when deleting Entities - must specify whole set
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityID'
        500:
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorReport'

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Entities
      operationId: getEntities
      summary: |
        List of entities in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/entityTypeParam'
      responses:
        200:
          description: List of entities in workspace
          schema:
            type: array
            items:
              $ref: '#/definitions/Entity'
        404:
          description: Workspace or entity type does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Entities
      operationId: getEntity
      summary: Get entity in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/entityTypeParam'
        - $ref: '#/parameters/entityNameParam'
      responses:
        200:
          description: Success
        404:
          description: Workspace or Entity does not exist
        500:
          description: Internal Server Error
    patch:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Entity updated
          schema:
            $ref: '#/definitions/Entity'
        400:
          description: Attribute does not exist
          schema:
            $ref: '#/definitions/ErrorReport'
        403:
          description: User does not have permission to update attributes in the namespace
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Workspace or Entity not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Update an entity
      tags:
        - Entities
      summary: Update entity in a workspace
      operationId: update_entity
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/entityTypeParam'
        - $ref: '#/parameters/entityNameParam'
        - in: body
          description: Update operations for attributes
          name: attributeUpdateJson
          required: false
          schema:
            $ref: '#/definitions/AttributeUpdateOperation'

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}/evaluate:
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Entities
      operationId: evaluateEntityExpression
      summary: Evaluate entity expression
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/entityTypeParam'
        - $ref: '#/parameters/entityNameParam'
        - in: body
          description: Expression
          name: expression
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
        400:
          description: Invalid entity expression
        404:
          description: Workspace or Entity does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/exportAttributesTSV:
    get:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: exportAttributesTSV
      summary: |
        TSV file containing workspace attributes
      produces:
        - text/plain
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Workspace attributes in TSV format
          schema:
            type: file
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/tsv:
    get:
      x-passthrough: false
      tags:
      - Entities
      operationId: downloadEntitiesTSV
      summary: |
        TSV file containing workspace entities of the specified type
      produces:
        - text/plain
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/entityTypeParam'
        - name: attributeNames
          description: comma separated list of ordered attribute names to be in downloaded tsv
          type: string
          in: query
        - name: model
          description: firecloud (default) or flexible
          type: string
          in: query
      responses:
        200:
          description: Workspace entities of specified type in TSV format
          schema:
            type: file
        404:
          description: Workspace or entity type does not exist
        414:
          description: |
           URI length exceeds the configured limit of 2048 characters.
           Please use the POST endpoint when it's necessary to supply a large number of attribute names.
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/entityQuery/{entityType}:
    get:
      x-passthrough: false
      tags:
        - Entities
      operationId: entityQuery
      summary: Paginated query for entities in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/entityTypeParam'
        - name: page
          description: Page number, 1-indexed (default 1)
          default: 1
          minimum: 1
          type: number
          in: query
        - name: pageSize
          description: Page size (default 10)
          default: 10
          minimum: 1
          type: number
          in: query
        - name: sortField
          description: Sort field (default "name")
          default: name
          type: string
          in: query
        - name: sortDirection
          description: Sort direction (asc or desc, default asc)
          default: asc
          enum: ["asc","desc"]
          type: string
          in: query
        - name: filterTerms
          description: Filter terms
          type: string
          in: query
      responses:
        200:
          description: List of entities in workspace
          schema:
            $ref: '#/definitions/EntityQueryResponse'
        404:
          description: Workspace or entity type does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/importAttributesTSV:
    post:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: importAttributesTSV
      summary: Import workspace attributes from a tsv file
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: attributes
          in: formData
          description: A valid TSV import file
          required: true
          type: file
      responses:
        200:
          description: Successful Request
        400:
          description: Bad Request
        404:
          description: Source Workspace not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/importBagit:
    post:
      x-passthrough: false
      tags:
        - Entities
      operationId: importBagit
      summary: Import entity TSVs from a zipped [BagIt](https://tools.ietf.org/html/draft-kunze-bagit-14) directory, whose payload contains two files - participants.tsv and samples.tsv
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: body
          description: JSON object containing bagit URL
          name: bagitImportRequest
          required: true
          schema:
            $ref: '#/definitions/BagitRequest'
      responses:
        200:
          description: Successful Request
        400:
          description: Bad Request
        404:
          description: Source Workspace not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/importEntities:
    post:
      x-passthrough: false
      tags:
        - Entities
      operationId: importEntities
      summary: Import entities from a tsv file
      consumes:
        - multipart/form-data
      parameters:
        - name: workspaceNamespace
          description: Destination Workspace Namespace
          required: true
          type: string
          in: path
        - name: workspaceName
          description: Destination Workspace Name
          required: true
          type: string
          in: path
        - name: entities
          in: formData
          description: A valid TSV import file
          required: true
          type: file
      responses:
        200:
          description: Successful Request
        400:
          description: Bad Request
        404:
          description: Source Workspace not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/importPFB:
    post:
      x-passthrough: false
      tags:
        - Entities
      operationId: importPFB
      summary: Import PFB data from an [Avro](https://avro.apache.org/) file
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: body
          description: JSON object containing PFB URL
          name: pfbImportRequest
          required: true
          schema:
            $ref: '#/definitions/PFBRequest'
      responses:
        204:
          description: Successful Request
        400:
          description: Bad Request
        401:
          description: Unauthorized access to Avro file or Workspace
        403:
          description: Forbidden access to Avro file or Workspace
        404:
          description: Avro file or Workspace not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/flexibleImportEntities:
    post:
      x-passthrough: false
      tags:
      - Entities
      operationId: flexibleImportEntities
      summary: Import entities from a tsv file
      consumes:
      - multipart/form-data
      parameters:
      - name: workspaceNamespace
        description: Destination Workspace Namespace
        required: true
        type: string
        in: path
      - name: workspaceName
        description: Destination Workspace Name
        required: true
        type: string
        in: path
      - name: entities
        in: formData
        description: A valid TSV import file
        required: true
        type: file
      responses:
        200:
          description: Successful Request
        400:
          description: Bad Request
        404:
          description: Source Workspace not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/lock:
    put:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Workspaces
      operationId: lockWorkspace
      summary: Lock Workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: No response was specified
        204:
          description: Successful Request
        403:
          description: Not Owner
        404:
          description: Workspace Not Found
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Method Configurations
      operationId: getWorkspaceMethodConfig
      summary: Get a method configuration in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: configNamespace
          description: Configuration Namespace
          required: true
          type: string
          in: path
        - name: configName
          description: Configuration Name
          required: true
          type: string
          in: path
      responses:
        200:
          description: Successful
        404:
          description: Workspace or Method Configuration not found
        500:
          description: Internal Server Error
    put:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Method Configurations
      operationId: overwriteWorkspaceMethodConfig
      description: |
        Add or overwrite a method configuration in a workspace.
        The method configuration name and namespace in the URI must match the values in the JSON.
      summary: Add or overwrite a method configuration in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: configNamespace
          description: Configuration Namespace
          required: true
          type: string
          in: path
        - name: configName
          description: Configuration Name
          required: true
          type: string
          in: path
        - name: body
          description: Method Config to Update
          required: true
          in: body
          schema:
            $ref: '#/definitions/ConfigurationIngest'
      responses:
        200:
          description: Successful
        400:
          description: Method configuration name and namespace in URI do not match those in JSON body
        404:
          description: Workspace or Method Configuration not found
        500:
          description: Internal Server Error
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Method Configurations
      operationId: updateWorkspaceMethodConfig
      description: |
        Update method configuration.
        Updates and moves the method configuration at the URI to the location in the request body.
        The location in the URI may be the same as the location in the request body.
        If the location in the request body matches the location in the URI, it is overwritten.
        If the location in the request body is different to the location in the URI, and there is a method config already at that location, 409 is returned.
      summary: Update a method configuration in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: configNamespace
          description: Configuration Namespace
          required: true
          type: string
          in: path
        - name: configName
          description: Configuration Name
          required: true
          type: string
          in: path
        - name: body
          description: Method Config to Update
          required: true
          in: body
          schema:
            $ref: '#/definitions/ConfigurationIngest'
      responses:
        200:
          description: Successful
        403:
          description: Invalid attribute namespace(s) in outputs
        404:
          description: Workspace or Method Configuration not found
        409:
          description: Method configuration with the new name already exists in the workspace
        500:
          description: Internal Server Error
    delete:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Method Configurations
      operationId: deleteWorkspaceMethodConfig
      summary: Delete a method configuration in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: configNamespace
          description: Configuration Namespace
          required: true
          type: string
          in: path
        - name: configName
          description: Configuration Name
          required: true
          type: string
          in: path
      responses:
        200:
          description: Successful request
        404:
          description: Workspace or Method Configuration not found
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}/rename:
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Method Configurations
      operationId: renameWorkspaceMethodConfig
      summary: Rename a method configuration in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: configNamespace
          description: Configuration Namespace
          required: true
          type: string
          in: path
        - name: configName
          description: Configuration Name
          required: true
          type: string
          in: path
        - name: rename
          description: Method Config Rename
          required: true
          in: body
          schema:
            $ref: '#/definitions/MethodConfigRename'
      responses:
        204:
          description: Successful request
        400:
          description: Workspace details in payload don't match the URI
        404:
          description: Workspace or Method Configuration not found
        409:
          description: Method Configuration with that name already exists
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/{configNamespace}/{configName}/validate:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/ValidatedMethodConfiguration'
        404:
          description: Workspace or Method Configuration does not exist
        500:
          description: Rawls Internal Error
      tags:
        - Method Configurations
      summary: get syntax validation information for a method configuration
      operationId: validate_method_configuration
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: path
          description: Method Configuration Namespace
          name: configNamespace
          required: true
          type: string
        - in: path
          description: Method Configuration Name
          name: configName
          required: true
          type: string

  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/copyFromMethodRepo:
    post:
      x-passthrough: false
      tags:
        - Method Configurations
        - Method Repository
      operationId: copyFromMethodRepo
      summary: Copy a Method Repository Configuration into a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: configToCopy
          description: Method Configuration to Copy
          required: true
          in: body
          schema:
            $ref: '#/definitions/CopyConfigurationIngest'
      responses:
        201:
          description: Successful request
        404:
          description: Source method configuration does not exist
        409:
          description: Destination method configuration by that name already exists
        422:
          description: Error parsing source method configuration
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/method_configs/copyToMethodRepo:
    post:
      x-passthrough: false
      tags:
        - Method Configurations
        - Method Repository
      operationId: copyToMethodRepo
      summary: Copy a Method Config in a workspace to the Method Repository
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: configToCopy
          description: Method Configuration to Copy
          required: true
          in: body
          schema:
            $ref: '#/definitions/PublishConfigurationIngest'
      responses:
        201:
          description: Successful request
        404:
          description: Source method configuration does not exist
        409:
          description: Destination method configuration by that name already exists
        422:
          description: Error parsing source method configuration
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Method Configurations
        - Workspaces
      operationId: listWorkspaceMethodConfigs
      summary: List method configurations in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: query
          description: Configs for all repos, not just Agora
          name: allRepos
          required: false
          type: boolean
          default: false
      responses:
        200:
          description: List of Method Configurations
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error
      description: |
        List method configurations in a workspace. By default, only Agora method configs are returned. To return configs for all repos, specify `allRepos` to be `true`.

        #### Expanded discussion on the methodRepoMethod field

        This endpoint returns method references to Agora in the format
        ```
        "methodRepoMethod": {
          "methodNamespace": "namespace",
          "methodName": "name",
          "methodVersion": 1,
          "sourceRepo": "agora",
          "methodUri": "agora://namespace/name/1"
        }
        ```
        and for Dockstore in the format
        ```
        "methodRepoMethod": {
          "methodPath": "path",
          "methodVersion": "version",
          "sourceRepo": "agora",
          "methodUri": "dockstore://path/version"
        }
        ```
        If you are only working with Agora methods, the fields `"sourceRepo"` and `"methodUri"` can be considered informational and do not need to be round-tripped (see the corresponding `POST /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs` for more details).
    post:
      x-passthrough: false
      tags:
        - Method Configurations
        - Workspaces
      operationId: postWorkspaceMethodConfig
      summary: Create a Method Configuration in a workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: methodConfigJson
          description: Method Configuration contents
          required: true
          in: body
          schema:
            $ref: '#/definitions/NewMethodConfigIngest'
      responses:
        201:
          description: Successful Request
        404:
          description: Workspace not found
        409:
          description: Method Configuration already exists
        500:
          description: Internal Server Error
      description: |
        Create method configurations.
        #### Expanded discussion on the methodRepoMethod field
        To create a method config for an Agora method, `"sourceRepo": "agora"` is optional; the following is sufficient:
        ```
        "methodRepoMethod": {
          "methodNamespace": "namespace",
          "methodName": "name",
          "methodVersion": 1
        }
        ```
        To create a method config for a Dockstore method, `"sourceRepo": "dockstore"` is required:
        ```
        "methodRepoMethod": {
          "sourceRepo": "dockstore",
          "methodPath": "path",
          "methodVersion": "version"
        }
        ```
        You may also use the URI on its own to create a config referencing any supported repo (currently Agora and Dockstore):
        ```
        "methodRepoMethod": {
          "methodUri": "agora://namespace/name/1"
        }
        ```
        ```
        "methodRepoMethod": {
          "methodUri": "dockstore://path/version"
        }
        ```
        The system is specified to check for a URI first before falling back to the legacy fields. Unsupported repos will return a 400 Bad Request.

  /api/workspaces/{workspaceNamespace}/{workspaceName}/permissionReport:
    post:
      x-passthrough: false
      tags:
        - Method Configurations
        - Workspaces
      operationId: workspacePermissionReport
      summary: Retrieve user permissions for the workspace and the workspace's method references
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: reportInput
          description: Users and/or configs on which to report, both optional
          required: true
          in: body
          schema:
            $ref: '#/definitions/PermissionReportRequest'
      responses:
        200:
          description: Permission Report
          schema:
            $ref: '#/definitions/PermissionReport'
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/sendChangeNotification:
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Success
        403:
          description: Insufficient permisions to send notification on this workspace
      parameters:
        - in: path
          description: workspace namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: workspace name
          name: workspaceName
          required: true
          type: string
      tags:
        - Workspaces
      summary: Sends notifications for change to workspace
      operationId: changedWorkspaceNotification
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/workspaces/{workspaceNamespace}/{workspaceName}/storageCostEstimate:
    get:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: getStorageCostEstimate
      summary: Calculate an estimate of the monthly storage cost for the workspace bucket
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Storage cost estimate
        404:
          description: Workspace not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Submissions
      operationId: listSubmissions
      summary: |
        List submissions.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: List of submissions
        404:
          description: Workspace not found
        500:
          description: Internal Error
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Submissions
      operationId: createSubmission
      summary: |
        Create a submission.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: submission
          description: Post Submission
          required: true
          in: body
          schema:
            $ref: '#/definitions/SubmissionRequest'
      responses:
        201:
          description: Successful Request
        400:
          description: Expression eval failed or entities are not of type required by method config
        404:
          description: Method Configuration or Entity not found
        409:
          description: Method Configuration failed to resolve input expressions with the supplied Entity
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissionsCount:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Submissions
      summary: Count submissions by status
      description: Counts all submissions run in the workspace, grouped by status. Returns a map of status:count.
      operationId: countSubmissions
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/SubmissionsCountResponse'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'

  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}:
    delete:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Submissions
      operationId: abortSubmission
      summary: |
        abort a submission
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/submissionIdParam'
      responses:
        204:
          description: Aborted successfully
        404:
          description: Submission not found
        500:
          description: Internal Error
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Submissions
      operationId: monitorSubmission
      summary: |
        Monitor submission status
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/submissionIdParam'
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/Submission'
        404:
          description: Submission not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/validate:
    post:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Validation Response
          schema:
            $ref: '#/definitions/SubmissionValidationReport'
        400:
          description: Expression evaluation failed or entities are not of type required by method config
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Workspace, Method Configuration or Entity not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
        502:
          description: Trouble talking to Agora
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Validate expression syntax for a submission
      tags:
        - Submissions
      summary: Validate submission
      operationId: validateSubmission
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: body
          description: Description of a submission.
          name: submission
          required: true
          schema:
            $ref: '#/definitions/SubmissionRequest'

  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      responses:
        200:
          description: Successful Request
        404:
          description: Workspace, Submission or Workflow not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get call-level metadata for workflow
      tags:
        - Submissions
      summary: Get call-level metadata for workflow
      operationId: workflowMetadata
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/submissionIdParam'
        - $ref: '#/parameters/workflowIdParam'
        - name: includeKey
          description: >
            When specified, return only these keys in the response. Matches any key in the response, including within
            nested blocks. May not be used with excludeKey.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: excludeKey
          description: >
            When specified, omit these keys from the response. Matches any key in the response, including within
            nested blocks. May not be used with includeKey.
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
          in: query
        - name: expandSubWorkflows
          description: >
            When true, metadata for sub workflows will be fetched and inserted automatically in the metadata response.
          required: false
          type: boolean
          default: false
          in: query

  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/outputs:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Submissions
      operationId: workflowOutputsInSubmission
      summary: |
        Get workflow outputs.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/submissionIdParam'
        - $ref: '#/parameters/workflowIdParam'
      responses:
        200:
          description: Get workflow outputs
        404:
          description: Workspace, Submission or Workflow not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/cost:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
      - Submissions
      operationId: workflowCostInSubmission
      summary: |
        Retrieve workflow cost, if available.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/submissionIdParam'
        - $ref: '#/parameters/workflowIdParam'
      responses:
        200:
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowCost'
        404:
          description: Workspace, Submission or Workflow not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/workspaces/{workspaceNamespace}/{workspaceName}/tags:
    get:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: getWorkspaceTags
      summary: |
        Get the tags for this workspace.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Workspace tags
          schema:
            $ref: '#/definitions/StringArray'
        404:
          description: Workspace not found
        500:
          description: Internal Error
    put:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: putWorkspaceTags
      summary: |
        Replace all tags for this workspace with the user input.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: body
          description: List of tags.
          name: tags
          required: true
          schema:
            $ref: '#/definitions/StringArray'
      responses:
        200:
          description: Workspace tags
          schema:
            $ref: '#/definitions/StringArray'
        400:
          description: Invalid input
        404:
          description: Workspace not found
        500:
          description: Internal Error
    patch:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: patchWorkspaceTags
      summary: |
        Add tags to the workspace without modifying pre-existing tags.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: body
          description: List of tags.
          name: tags
          required: true
          schema:
            $ref: '#/definitions/StringArray'
      responses:
        200:
          description: Workspace tags
          schema:
            $ref: '#/definitions/StringArray'
        400:
          description: Invalid input
        404:
          description: Workspace not found
        500:
          description: Internal Error
    delete:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: deleteWorkspaceTags
      summary: |
        Remove the user-supplied tags from the workspace.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - in: body
          description: List of tags.
          name: tags
          required: true
          schema:
            $ref: '#/definitions/StringArray'
      responses:
        200:
          description: Workspace tags
          schema:
            $ref: '#/definitions/StringArray'
        400:
          description: Invalid input
        404:
          description: Workspace not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/unlock:
    put:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
        - Workspaces
      operationId: unlockWorkspace
      summary: Unlock Workspace
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: No response was specified
        204:
          description: Successful Request
        403:
          description: Not Owner
        404:
          description: Workspace Not Found
        500:
          description: Internal Server Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/updateAttributes:
    patch:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: updateAttributes
      summary: |
        Modify attributes on a workspace.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: workspaceUpdateJson
          description: Attribute operations. WARNING! This should not be used to change library metadata (republish will not happen). Use UpdateAttributes in the library section.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AttributeUpdateOperation'
          in: body
      responses:
        200:
          description: Success
        400:
          description: Invalid operation
        404:
          description: Workspace not found
        500:
          description: Internal Error

  /api/workspaces/{workspaceNamespace}/{workspaceName}/setAttributes:
    patch:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: setAttributes
      summary: |
        Set attributes on a workspace.
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - name: newAttributes
          description: New attribute values, as Map[String, Attribute]. WARNING! This should not be used to change library metadata (republish will not happen). Use UpdateAttributes in the library section
          required: true
          schema:
            type: object
          in: body
      responses:
        200:
          description: Success
        400:
          description: Malformed request
        404:
          description: Workspace not found
        500:
          description: Internal Error

  /api/workspaces/tags:
    get:
      x-passthrough: true
      x-passthrough-target: rawls
      tags:
       - Workspaces
      operationId: getTags
      summary: |
        Get all tags used in FireCloud (for autocomplete)
      description: list of all tags used in FireCloud and their associated frequencies
      parameters:
        - in: query
          description: Query string
          name: q
          required: false
          type: string
      responses:
        200:
          description: list of all tags used in FireCloud
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceTag'
        500:
          description: Rawls Internal Error

  /cookie-authed/download/b/{bucket}/o/{object}:
    get:
      x-passthrough: false
      tags:
      - Storage
      operationId: getStorageDownload
      summary: |
        Download GCS object using a cookie token
      description: |
        **Important**: this file download does not work within the swagger UI. It is here for documentation
        purposes. You can fill in the fields and submit; once you do so, you will get an error, but swagger
        will populate the "Request URL" field. You can then copy and paste that field into a new tab to
        achieve your download.
      parameters:
        - name: bucket
          description: Name of the bucket in which the object resides.
          required: true
          type: string
          in: path
        - name: object
          description: Name of the object. (be sure to urlencode)
          required: true
          type: string
          in: path
      responses:
        200:
          description: Success
          schema:
            type: file
        404:
          description: Not Found
        500:
          description: Internal Error
      security: []

  /cookie-authed/workspaces/{workspaceNamespace}/{workspaceName}/exportAttributesTSV:
    get:
      x-passthrough: false
      tags:
      - Workspaces
      operationId: browserDownloadAttributes
      summary: |
        TSV file containing workspace attributes (allows cookie-based authentication)
      produces:
      - text/plain
      parameters:
         - $ref: '#/parameters/workspaceNamespaceParam'
         - $ref: '#/parameters/workspaceNameParam'
      responses:
        200:
          description: Workspace attributes in TSV format
          schema:
            type: file
        404:
          description: Workspace does not exist
        500:
          description: Internal Server Error
      security: []

  /cookie-authed/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/tsv:
    post:
      x-passthrough: false
      tags:
      - Entities
      operationId: browserDownloadEntitiesTSV
      summary: |
        TSV file containing workspace entities of the specified type
      description: |
        swagger-ui seems to not handle file downloads, so this endpoint won't function through the ui.
        It is here for documentation purposes only.
      consumes:
        - multipart/form-data
      produces:
        - text/plain
        - application/octet-stream
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/entityTypeParam'
        - name: FCtoken
          description: valid access token to use for authentication
          type: string
          in: formData
          required: true
        - name: attributeNames
          description: comma separated list of ordered attribute names to be in downloaded tsv
          type: string
          in: formData
          allowEmptyValue: true
        - name: model
          description: flexible or firecloud (firecloud model will be used by default)
          type: string
          in: formData
          allowEmptyValue: true
      responses:
        200:
          description: Workspace entities of specified type in TSV format
          schema:
            type: file
        404:
          description: Workspace or entity type does not exist
        500:
          description: Internal Server Error
      security: []
    get:
      x-passthrough: false
      tags:
      - Entities
      operationId: browserDownloadEntitiesTSVGet
      summary: |
        TSV file containing workspace entities of the specified type
      description: |
        swagger-ui seems to not handle file downloads, so this endpoint won't function through the ui.
        It is here for documentation purposes only.
      produces:
        - text/plain
        - application/octet-stream
      parameters:
        - $ref: '#/parameters/workspaceNamespaceParam'
        - $ref: '#/parameters/workspaceNameParam'
        - $ref: '#/parameters/entityTypeParam'
        - name: attributeNames
          description: comma separated list of ordered attribute names to be in downloaded tsv
          type: string
          in: query
        - name: model
          description: flexible or firecloud (firecloud model will be used by default)
          type: string
          in: query
      responses:
        200:
          description: Workspace entities of specified type in TSV format
          schema:
            type: file
        404:
          description: Workspace or entity type does not exist
        414:
          description: |
           URI length exceeds the configured limit of 2048 characters.
           Please use the POST endpoint when it's necessary to supply a large number of attribute names.
        500:
          description: Internal Server Error
      security: []

  /duos/autocomplete/{queryTerm}:
    get:
      x-passthrough: false
      tags:
      - Library
      operationId: duosAutocomplete
      summary: |
        Passes through to DUOS' autocomplete method to select ontology terms of disease type that match the query term.
      parameters:
        - name: queryTerm
          in: path
          description: The query term (word fragment) which the service should try and complete.
          required: true
          type: string
      responses:
        200:
          description: Array of results.
        500:
          description: Internal Server Error
      security: []

  /duos/researchPurposeQuery:
    post:
      x-passthrough: false
      tags:
      - Library
      operationId: duosResearchPurposeQuery
      summary: Generates an ElasticSearch clause for filtering by research purpose
      parameters:
        - in: body
          name: body
          description: Research Purpose Request
          required: true
          schema:
            $ref: '#/definitions/ResearchPurposeRequest'
      responses:
        200:
          description: JSON of ES filter clause

  /duos/structuredData:
    post:
      x-passthrough: false
      tags:
      - Library
      operationId: dataIngest
      summary: Data Use Search ingest
      description: The ingest API will take the answers to consent questions and return the elasticsearch structure to persist with the data reference.
      parameters:
        - in: body
          description: Structured Data Request
          name: body
          required: true
          schema:
            $ref: '#/definitions/structuredDataRequest'
      responses:
        500:
          description: Internal Server Error
      security:
        - googleoauth:
          - openid
          - email
          - profile

  /api/duos/consent/orsp/{orspId}:
    get:
      x-passthrough: true
      x-passthrough-target: consent
      tags:
      - Library
      operationId: duosConsentOrspId
      summary: Find Consent by ORSP ID
      parameters:
        - name: orspId
          in: path
          description: Finds the consent for the provided ORSP ID.
          required: true
          type: string
      responses:
        200:
          description: Consent
          schema:
            $ref: '#/definitions/Consent'
        400:
          description: The consent associated with the provided name has not been approved.
        401:
          description: Invalid authorization, must be a FireCloud user.
        404:
          description: The consent associated with the provided name could not be found.
        500:
          description: Internal Server Error

  /error:
    get:
      x-passthrough: false
      tags:
      - Status
      operationId: error
      summary: |
        An error status endpoint for load balancing purposes
      responses:
        503:
          description: Service Unavailable
      security: []

  /health:
    get:
      x-passthrough: false
      tags:
      - Status
      operationId: health
      summary: |
        A health status endpoint for load balancing purposes
      responses:
        200:
          description: Success
      security: []

  /status:
    get:
      x-passthrough: false
      operationId: status
      tags:
        - Status
      summary: |
        An orchestrated status check that includes a health report of underlying systems
      responses:
        200:
          description: This service is healthy; check payload for subsystem health.
          schema:
            $ref: '#/definitions/SystemStatus'
        500:
          description: This service is not healthy; therefore, payload may be missing or incomplete.
          schema:
            $ref: '#/definitions/SystemStatus'
      security: []

  /handle-oauth-code:
    post:
      x-passthrough: false
      tags:
        - OAuth
      operationId: handleOauthCode
      summary: deprecated
      description: |
        This API is a deprecated noop. Previously, it allowed the server to acquire a refresh token.
        Since refresh tokens are no longer used in the back end, this API is now hardcoded to respond as if
        it successfully acquired a refresh token, without doing any actual work.
        This API may be removed in a future release.
      parameters:
        - in: body
          name: body
          schema:
            required:
              - code
              - redirectUri
            properties:
              code:
                type: string
              redirectUri:
                type: string
      responses:
        204:
          description: All set
      security: []

  /me:
    get:
      x-passthrough: false
      tags:
        - Profile
      operationId: me
      summary: Returns registration and activation status for the current user
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Me'
        401:
          description: Unauthorized. User is not allowed in FireCloud or has not signed in.
        403:
          description: Forbidden. User is registered in FireCloud, but not activated.
        404:
          description: Not Found. User is authenticated to Google but not a FireCloud member.
        500:
          description: Internal Server Error determining user status.
        503:
          description: Service Unavailable. Could not reach underlying services to determine user status.

  /api/proxyGroup/{email}:
    get:
      x-passthrough: true
      x-passthrough-target: sam
      tags:
        - Profile
      operationId: getProxyGroup
      summary: Returns the proxy group email for the current user
      parameters:
        - in: path
          description: User email whose proxy group to retrieve
          name: email
          required: true
          type: string
      responses:
        200:
          description: 'user proxy group'
          schema:
            type: string
        404:
          description: 'user not found'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'

  /register:
    get:
      x-passthrough: true
      x-passthrough-target: sam
      tags:
        - Profile
      operationId: getUserStatus
      summary: Passes through to the Rawls userinfo API and returns its response
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RawlsMe'
        404:
          description: User Not Found.
        500:
          description: Internal Server Error determining Rawls user status.

  /register/profile:
    get:
      x-passthrough: false
      tags:
        - Profile
      operationId: getAll
      summary: Returns a list of all keys and values stored in the user profile service for the currently logged-in user.
      produces:
        - application/json
        - text/plain
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RegisterProfile'
        500:
          description: Internal server error
    post:
      x-passthrough: false
      tags:
        - Profile
      operationId: setProfile
      summary: Sets a profile object in the user profile service for the currently logged-in user.
      parameters:
        - name: profile
          description: A complete profile
          in: body
          schema:
            $ref: '#/definitions/Profile'
      responses:
        200:
          description: OK
        400:
          description: Bad request
        500:
          description: Internal server error

  /register/userinfo:
    get:
      x-passthrough: false
      tags:
        - Profile
      operationId: userInfo
      summary: Passes through to Google's userinfo API and returns its response
      description: >
        See https://developers.google.com/+/web/api/rest/openidconnect/getOpenIdConnect for response info.
        Userinfo endpoint lives at https://www.googleapis.com/oauth2/v3/userinfo.
      responses:
        200:
          description: OK

  /ga4gh/v1/tools/{id}:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: List one specific tool, acts as an anchor for self references
      description: This endpoint returns one specific tool (which has ToolVersions nested inside it)
      tags:
        - GA4GH Tool Registry
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A unique identifier of the tool, scoped to this registry, for example `123456`
      responses:
        '200':
          description: A tool.
          schema:
              $ref: '#/definitions/Tool'
      security: []

  /ga4gh/v1/tools/{id}/versions:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: List versions of a tool
      description: Returns all versions of the specified tool
      tags:
        - GA4GH Tool Registry
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A unique identifier of the tool, scoped to this registry, for example `123456`
      responses:
        '200':
          description: An array of tool versions
          schema:
            type: array
            items:
              $ref: '#/definitions/ToolVersion'
      security: []

  /ga4gh/v1/tools/{id}/versions/{version-id}:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: List one specific tool version, acts as an anchor for self references
      description: This endpoint returns one specific tool version
      tags:
        - GA4GH Tool Registry
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A unique identifier of the tool, scoped to this registry, for example `123456`
        - name: version-id
          in: path
          required: true
          type: string
          description: An identifier of the tool version, scoped to this registry, for example `v1`
      responses:
        '200':
          description: A tool version.
          schema:
              $ref: '#/definitions/ToolVersion'
      security: []

  /ga4gh/v1/tools:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: List all tools
      description: >
        This endpoint returns all tools available.
      tags:
        - GA4GH Tool Registry
      responses:
        '200':
          description: An array of Tools that match the filter.
          schema:
            type: array
            items:
              $ref: '#/definitions/Tool'
      security: []

  /ga4gh/v1/tools/{id}/versions/{version-id}/{type}/descriptor:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: Get the tool descriptor (WDL) for the specified tool.
      description: Returns the WDL descriptor for the specified tool.
      tags:
        - GA4GH Tool Registry
      parameters:
        - name: type
          required: true
          in: path
          description: >
            The output type of the descriptor. If not specified it is up to the underlying
            implementation to determine which output type to return. Plain types return the
            bare descriptor while the "non-plain" types return a descriptor wrapped
            with metadata.
          type: string
          enum:
            - WDL
            - plain-WDL
        - name: id
          in: path
          description: >
            A unique identifier of the tool, scoped to this registry, for example `123456`.

              *In FireCloud, this must be a namespace + ":" + name. For instance, if your namespace
              is 'foo' and name is 'bar', this must be 'foo:bar'.*
          required: true
          type: string
        - name: version-id
          in: path
          required: true
          type: string
          description: >
            An identifier of the tool version for this particular tool registry, for example `v1`.

              *In FireCloud, this must be an integer representing the FireCloud snapshot id.*
      responses:
        '200':
          description: The tool descriptor.
          schema:
            $ref: '#/definitions/ToolDescriptor'
        '404':
          description: The tool can not be output in the specified type.
          schema:
            $ref: '#/definitions/Error'
      security: []

  /ga4gh/v1/metadata:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: Return some metadata that is useful for describing this registry
      description: Return some metadata that is useful for describing this registry
      tags:
        - GA4GH Tool Registry
      responses:
        '200':
          description: A Metadata object describing this service.
          schema:
              $ref: '#/definitions/Metadata'
      security: []

  /ga4gh/v1/tool-classes:
    get:
      x-passthrough: true
      x-passthrough-target: agora
      summary: List all tool types
      description: >
        This endpoint returns all tool-classes available
      tags:
        - GA4GH Tool Registry
      responses:
        '200':
          description: An array of methods that match the filter.
          schema:
            type: array
            items:
              $ref: '#/definitions/ToolClass'
      security: []


##########################################################################################
## PARAMETERS
##########################################################################################
parameters:
  workflowTypeParam:
    name: workflowType
    type: string
    description: The workflow language for the file you submitted. Cromwell currently supports WDL and CWL.
    enum: [WDL, CWL]
    required: false
    in: formData
  workflowTypeVersionParam:
    name: workflowTypeVersion
    description: The specification version for the workflow language being used. For WDL, Cromwell currently supports draft-2 and 1.0. For CWL, Cromwell currently supports v1.0.
    required: false
    type: string
    enum: ["draft-2", "1.0", "v1.0"]
    in: formData
  versionParam:
    name: version
    description: Cromwell API Version
    required: true
    type: string
    in: path
    default: v1 # This really should be an enum but swagger-ui seems to not like it
  workspaceNamespaceParam:
    name: workspaceNamespace
    description: Workspace Namespace
    required: true
    type: string
    in: path
  workspaceNameParam:
    name: workspaceName
    description: Workspace Name
    required: true
    type: string
    in: path
  methodNamespaceParam:
    name: namespace
    description: Method Namespace
    required: true
    type: string
    in: path
  methodNameParam:
    name: name
    description: Method Name
    required: true
    type: string
    in: path
  methodSnapshotId:
    name: snapshotId
    description: Method snapshot ID
    required: true
    type: string
    in: path
  configNamespaceParam:
    name: namespace
    description: Method Configuration Namespace
    required: true
    type: string
    in: path
  configNameParam:
    name: name
    description: Method Configuration Name
    required: true
    type: string
    in: path
  configSnapshotId:
    name: snapshotId
    description: Method Configuration snapshot ID
    required: true
    type: string
    in: path
  configACLPayload:
    name: payload
    description: the ACLs to upsert
    required: true
    in: body
    schema:
      $ref: '#/definitions/MethodConfigACL'
  entityTypeParam:
    name: entityType
    description: Entity Type
    required: true
    type: string
    in: path
  entityNameParam:
    name: entityName
    description: Entity Name
    required: true
    type: string
    in: path
  submissionIdParam:
    name: submissionId
    description: Submission ID
    required: true
    type: string
    in: path
  workflowIdParam:
    name: workflowId
    description: Workflow ID
    required: true
    type: string
    in: path
  jobIdParam:
    name: jobId
    description: Operations job ID from Google Genomics API
    required: true
    type: string
    in: path

##########################################################################################
## DEFINITIONS
##########################################################################################
definitions:

  AttributeEntityReference:
    type: object
    description: ''
    required:
      - entityType
      - entityName
    properties:
      entityType:
        type: string
        description: The type of the entity
      entityName:
        type: string
        description: The name of the entity

  AttributeUpdateOperation:
    type: object
    properties:
      op:
        type: string
        description: Operation to perform on the attribute
      attributeName:
        type: string
        description: The name of the attribute
      addUpdateAttribute:
        type: string
        description: The value of the attribute (if adding/updating)
    required:
      - op
      - attributeName

  BillingAccount:
    description: 'Details for a single billing account'
    required:
      - accountName
      - firecloudHasAccess
      - displayName
    type: object
    properties:
      accountName:
        type: string
        description: name of billing account
      firecloudHasAccess:
        type: boolean
        description: whether the Firecloud service has been given access to this billing account
      displayName:
        type: string
        description: display name of billing account

  BillingAccountRedirect:
    description: 'Google redirect URL to enable appropriate scopes'
    required:
      - redirect
    type: object
    properties:
      redirect:
        type: string
        description: URL to redirect to

  BillingProjectMember:
    description: ''
    required:
      - email
      - role
    type: object
    properties:
      email:
        type: string
        description: the email of the user
      role:
        type: string
        description: the role of the user in the project

  BillingProjectStatus:
    description: a billing project status
    required:
      - projectName
      - creationStatus
    type: object
    properties:
      projectName:
        type: string
        description: the name of the billing project
      creationStatus:
        type: string
        enum: ["Creating", "Ready", "Error"]

  BillingProjectMembership:
    description: ''
    required:
      - projectName
      - role
      - status
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project to create
      role:
        type: string
        description: the role of the current user in the project
      status:
        type: string
        enum: ["Creating", "Ready", "Error"]
      message:
        type: string
        description: informational message about the project

  CallMetadata:
    description: Stuff you need to know about calls
    type: object
    properties:
      inputs:
        type: object
        description: map from input names onto resolved values
      executionStatus:
        type: string
        description: status of call
      executionEvents:
        type: array
        items:
          $ref: '#/definitions/ExecutionEvent'
      backendStatus:
        type: string
        description: status of the backend
      backendLogs:
        type: object
        description: map of log files from backend
      outputs:
        type: object
        description: map from output names to local files
      start:
        type: string
        format: date-time
        description: starting time of call
      end:
        type: string
        format: date-time
        description: ending time of call
      jobId:
        type: string
        description: unique ID of job
      returnCode:
        type: integer
        description: result code
      backend:
        type: string
        description: type of backend executing the call
      stdout:
        type: string
        description: location of stdout
      stderr:
        type: string
        description: location of stderr
      shardIndex:
        type: integer
        description: call index within a scatter block, as reported by execution service


  BagitRequest:
    type: object
    properties:
      bagitURL:
        type: string
        description: link to publically accessible zipped BagIt directory
      format:
        type: string
        enum:
          - TSV
        description: the type of the files inside the bagit. Currently this must be the string "TSV".
    required:
      - bagitURL
      - format

  ConfigurationIngest:
    type: object
    properties:
      namespace:
        type: string
        description: Method configuration namespace
      name:
        type: string
        description: Method configuration name
      rootEntityType:
        type: string
        description: Root entity type
      workspaceName:
        type: object
        description: Map[String, String] with corresponding workspace-related information - name and namespace
      methodRepoMethod:
        type: object
        description: Map[String, String] with corresponding method-related information
      outputs:
        type: object
        description: Map[String, String] with outputs information
      inputs:
        type: object
        description: Map[String, String] with inputs information
      prerequisites:
        type: object
        description: Map[String, String] of prerequisites (keys unused, will be removed in the future)
    required:
      - namespace
      - name
      - rootEntityType
      - workspaceName
      - methodRepoMethod
      - outputs
      - inputs
      - prerequisites

  ConfigurationQuery:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace which contains Configuration.
        default: YOUR_NAMESPACE
      name:
        type: string
        description: Name of the Configuration.
        default: quick-BWA-config
      synopsis:
        type: string
        description: Synopsis which contains Configuration.
        default: Quick synopsis of configuration.
      snapshotComment:
        type: string
        description: Snapshot comment of AgoraEntity
        default: Improved spline reticulation
      documentation:
        type: string
        description: Documentation of the Configuration.
        default: |
          Example configuration with an associated method.
      payload:
        type: string
        description: Payload of method -- must be in WDL format
        default: >
          { "methodRepoMethod": { "methodNamespace": "YOUR_NAMESPACE",
          "methodName": "BWA", "methodVersion": 1}}
      entityType:
        type: string
        description: Can only be Configuration.
        default: Configuration

  ConfigurationResponse:
    type: object
    properties:
      managers:
        type: array
        items:
          type: string
        description: List of Owners.
      method:
        type: object
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: YOUR_NAMESPACE
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      snapshotId:
        type: integer
        description: SnapshotId of AgoraEntity
      snapshotComment:
        type: string
        description: Snapshot comment of AgoraEntity
        default: Improved spline reticulation
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      documentation:
        type: string
        description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      createDate:
        type: string
        description: Timestamp of creation
      url:
        type: string
        description: URL where resource can be accessed.
      payload:
        type: string
        description: Payload of config - JSON format in a string
        default: >
          { "methodRepoMethod": { "methodNamespace": "YOUR_NAMESPACE",
          "methodName": "BWA", "methodVersion": 1}}
      entityType:
        type: string
        description: Type of the AgoraEntity -- Task or Workflow.
        default: Task
      public:
        type: boolean
        description: Is this method publicly readable?

  ConfigurationResponseWithPayloadObject:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: YOUR_NAMESPACE
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      snapshotId:
        type: integer
        description: SnapshotId of AgoraEntity
      snapshotComment:
        type: string
        description: Snapshot comment of AgoraEntity
        default: Improved spline reticulation
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      documentation:
        type: string
        description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      createDate:
        type: string
        description: Timestamp of creation
      url:
        type: string
        description: URL where resource can be accessed.
      payloadObject:
        $ref: '#/definitions/ConfigurationPayload'
      entityType:
        type: string
        description: Type of the AgoraEntity -- Task or Workflow.
        default: Task

  Consent:
    type: object
    properties:
      consentId:
        type: string
        description: The ID of the entity.
      name:
        type: string
        description: Name used to identify the consent.
      createDate:
        type: number
        description: Creation Date in date-time milliseconds
      lastUpdate:
        type: number
        description: Date of the last update in date-time milliseconds
      sortDate:
        type: number
        description: The lastest modification date in date-time milliseconds
      requiresManualReview:
        type: boolean
        description: Describes if this consent has to be reviewed manually.
      dataUseLetter:
        type: string
        description: The URL of the saved file.
      useRestriction:
        type: object
        description: The UseRestriction of this consent. Used to match against another entities.
      dulName:
        type: string
        description: Name that identifies the Data Use Letter file.
      translatedUseRestriction:
        type: string
        description: The translated use restriction of the consent.

  structuredDataRequest:
    required:
        - generalResearchUse
        - healthMedicalBiomedicalUseRequired
        - diseaseUseRequired
        - commercialUseProhibited
        - forProfitUseProhibited
        - methodsResearchProhibited
        - aggregateLevelDataProhibited
        - controlsUseProhibited
        - genderUseRequired
        - pediatricResearchRequired
        - irbRequired
    type: object
    properties:
      generalResearchUse:
        type: boolean
        description: Is the data available for future general research use?
      healthMedicalBiomedicalUseRequired:
        type: boolean
        description: Is future use limited for health/medical/biomedical research?
      diseaseUseRequired:
        type: array
        default: []
        items:
          type: string
          example: "http://purl.obolibrary.org/obo/DOID_4"
        description: Future use is limited to research involving the following disease area(s). These values must be urls such as "http://purl.obolibrary.org/obo/DOID_12345".
      commercialUseProhibited:
        type: boolean
        description: Is future commercial use prohibited?
      forProfitUseProhibited:
        type: boolean
        description: Is future use by for-profit entities prohibited?
      methodsResearchProhibited:
        type: boolean
        description: Is future use for methods research (analytic/software/technology development) outside the bounds of the other specified restrictions prohibited?
      aggregateLevelDataProhibited:
        type: boolean
        description: Is future use of aggregate-level data for general research purposes prohibited?
      controlsUseProhibited:
        type: boolean
        description: Is future use as a control set for diseases other than those specified prohibited?
      genderUseRequired:
        type: string
        description: If future use is limited to research involving a particular gender, specify "male" or "female". Any other value will be read as false. This field is case-insensitive.
      pediatricResearchRequired:
        type: boolean
        description: Is future use limited to pediatric research?
      irbRequired:
        type: boolean
        description: Should the requester provide documentation of local IRB/REC approval?
      prefix:
        type: string
        description: Optional. A prefix that is prepended to the field names of the responses. This is purely for personalization.


  CopyConfigurationIngest:
    type: object
    properties:
      configurationNamespace:
        type: string
        description: Method configuration namespace
      configurationName:
        type: string
        description: Method configuration name
      configurationSnapshotId:
        type: number
        description: Method configuration snapshot id
      destinationNamespace:
        type: string
        description: Method configuration destination namespace
      destinationName:
        type: string
        description: Method configuration destination name
    required:
      - configurationNamespace
      - configurationName
      - configurationSnapshotId
      - destinationNamespace
      - destinationName

  CopyEntity:
    type: object
    properties:
      sourceWorkspace:
        $ref: '#/definitions/Namespace'
        description: Source Workspace Namespace
      entityType:
        type: string
        description: Entity Type
      entityNames:
        type: array
        items:
          type: string
        description: List of entity names to be copied

  CreateRawlsBillingProjectFullRequest:
    description: ''
    required:
      - projectName
      - billingAccount
    type: object
    properties:
      projectName:
        type: string
        description: the name of the project to create
      billingAccount:
        type: string
        description: the id of the billing account to use, must start with 'billingAccounts/'
      highSecurityNetwork:
        type: boolean
        description: Optional, false if not specified. If true, spin up all compute in a VPC network.
      enableFlowLogs:
        type: boolean
        description: Optional, false if not specified. If true, enable flow logs within the high security network. Requires highSecurityNetwork = true.
      servicePerimeter:
        type: string
        description: The fully qualified name of the GCP service perimeter to put this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME]. Caller must have the add_project action for this service perimeter in Sam.

  CuratorStatus:
    description: is the user a curator?
    required:
      - curator
    type: object
    properties:
      curator:
        type: boolean

  DatasetPermission:
    type: object
    properties:
      name:
        type: string
        description: the name of the NIH dataset
      authorized:
        type: boolean
        description: true if you have access to the dataset, false otherwise

  Enabled:
    type: object
    properties:
      google:
        type: boolean
        description: User enabled via Google?
      ldap:
        type: boolean
        description: User enabled in LDAP?
      allUsersGroup:
        type: boolean
        description: User is a member of the "All Users" group?

  Entity:
    description: ''
    required:
      - name
      - entityType
      - attributes
    type: object
    properties:
      name:
        type: string
        description: The name of the entity
      entityType:
        type: string
        description: The type of the entity
      attributes:
        type: object
        description: Map[String,Attribute]

  EntityAccessControl:
    type: object
    required:
      - referencedBy
      - acls
    properties:
      method:
        $ref: '#/definitions/MethodShort'
        description: method repo method
      referencedBy:
        $ref: '#/definitions/MethodConfigurationName'
        description: workspace configuration that references the method
      acls:
        type: array
        items:
          $ref: '#/definitions/FireCloudPermission'
        description: method repo ACLs for the referenced method
      message:
        type: string
        description: error message generated when retrieving acls for this method

  EntityCopyResponse:
    type: object
    description: ''
    required:
      - entitiesCopied
      - softConflicts
      - hardConflicts
    properties:
      entitiesCopied:
        type: array
        description: 'the entities that were successfully copied into the workspace'
        items:
          $ref: '#/definitions/AttributeEntityReference'
      hardConflicts:
        type: array
        description: 'these entities already exist in your workspace'
        items:
          $ref: '#/definitions/EntityHardConflict'
      softConflicts:
        type: array
        description: 'the conflicts within your entity subtrees. note that this will be empty if there are hard conflicts'
        items:
          $ref: '#/definitions/EntitySoftConflict'

  EntityHardConflict:
    type: object
    description: ''
    required:
      - entityType
      - entityName
    properties:
      entityType:
        type: string
        description: 'the type of the entity'
      entityName:
        type: string
        description: 'the name of the entity'

  EntityID:
    type: object
    properties:
      entityType:
        type: string
        description: Entity Type
      entityName:
        type: string
        description: Entity Name

  EntityQueryParameters:
    description: ''
    required:
      - page
      - pageSize
      - sortField
      - sortDirection
    type: object
    properties:
      page:
        type: number
        description: page number, 1-indexed positive integer
      pageSize:
        type: number
        description: count of items per page, positive integer
      sortField:
        type: string
        description: field to sort by
      sortDirection:
        type: string
        description: asc or desc
      filterTerms:
        type: string
        description: terms to filter results by

  EntityQueryResponse:
    description: ''
    required:
      - parameters
      - resultMetadata
      - results
    type: object
    properties:
      parameters:
        $ref: '#/definitions/EntityQueryParameters'
      resultMetadata:
        $ref: '#/definitions/EntityQueryResultMetadata'
      results:
        type: array
        items:
          $ref: '#/definitions/Entity'

  EntityQueryResultMetadata:
    description: ''
    required:
      - unfilteredCount
      - filteredCount
      - filteredPageCount
    type: object
    properties:
      unfilteredCount:
        type: number
        description: count of results before filtering
      filteredCount:
        type: number
        description: count of results after filtering
      filteredPageCount:
        type: number
        description: count of pages after filtering; honors pageSize parameter

  EntitySoftConflict:
    type: object
    description: ''
    required:
      - entityType
      - entityName
      - conflicts
    properties:
      entityType:
        type: string
        description: 'the type of the entity'
      entityName:
        type: string
        description: 'the name of the entity'
      conflicts:
        type: array
        description: 'the next entity in the path to the conflict'
        items:
          $ref: '#/definitions/EntitySoftConflict'

  Error:
    type: object
    properties:
      code:
        type: integer
        default: 500
      message:
        type: string
        default: Internal Server Error

  ErrorReport:
    description: ''
    required:
      - source
      - message
      - causes
      - stackTrace
    type: object
    properties:
      source:
        type: string
        description: service causing error
      message:
        type: string
        description: what went wrong
      statusCode:
        type: integer
        description: HTTP status code
      causes:
        type: array
        description: errors triggering this one
        items:
          $ref: '#/definitions/ErrorReport'
      stackTrace:
        type: array
        description: stack trace
        items:
          $ref: '#/definitions/StackTraceElement'

  ExecutionEngineVersion:
    type: object
    properties:
      cromwell:
        type: string

  ExecutionEvent:
    description: ''
    required:
      - description
      - startTime
    type: object
    properties:
      description:
        type: string
        description: Description of the event
      startTime:
        type: string
        format: date-time
        description: When the event started
      endTime:
        type: string
        format: date-time
        description: When the event finished

  ExtendedEnabled:
    allOf:
      - $ref: '#/definitions/Enabled'
    type: object
    properties:
      allUsersGroup:
        type: boolean
        description: User is a member of the "All Users" group?

  FireCloudPermission:
    type: object
    required:
      - user
      - role
    properties:
      user:
        type: string
      role:
        type: string

  JWTWrapper:
    type: object
    properties:
      jwt:
        type: string
        description: the encoded/signed JWT

  KeyValuePair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string

  LibraryBulkIndexResponse:
    type: object
    properties:
      totalCount:
        type: number
        description: the number of published workspaces sent to be indexed
      hasFailures:
        type: boolean
        description: did the indexing operation result in any failures?
        default: false
      failureMessages:
        type: object
        description: Map[String,String] of id -> failure message

  LibraryMetadataInput:
    type: object
    description: JSON-standard packet of metadata as defined by the Library schema
    example: |
      {
        "library:requiresExternalApproval": false,
        "library:contactEmail": "someone@broadinstitute.org",
        "library:datasetName": "My Dataset",
        "library:numSubjects": 123,
        "library:datatype": ["Whole Exome", "Whole Genome"]
        ...
        additional JSON-standard fields as
        defined by the Library schema
        ...
      }

  ManagedGroupRef:
    description: a reference to a group that can be managed by users
    type: object
    required:
      - membersGroupName
    properties:
      membersGroupName:
        type: string

  ManagedGroupAccessInstructions:
    description: ''
    required:
      - groupName
      - instructions
    type: object
    properties:
      groupName:
        type: string
        description: The name of the Group with instructions
      instructions:
        type: string
        description: The instructions for applying to the Group

  ManagedGroupAccessResponse:
    description: an element of a list of groups a user has access to
    type: object
    required:
      - groupName
      - groupEmail
      - role
    properties:
      groupName:
        type: string
      groupEmail:
        type: string
      role:
        type: string

  ManagedGroupWithMembers:
    description: a group with all of its members
    type: object
    required:
      - membersGroup
      - adminsGroup
      - membersEmails
      - adminsEmails
    properties:
      membersGroup:
        $ref: '#/definitions/RawlsGroupShort'
      adminsGroup:
        $ref: '#/definitions/RawlsGroupShort'
      membersEmails:
        type: array
        items:
          type: string
      adminsEmails:
        type: array
        items:
          type: string

  Me:
    type: object
    properties:
      userInfo:
        $ref: '#/definitions/UserInfo'
      enabled:
        $ref: '#/definitions/Enabled'

  MethodAclPair:
    type: object
    required:
      - method
      - acls
    properties:
      method:
        $ref: '#/definitions/MethodRepoMethod'
      acls:
        type: array
        items:
          $ref: '#/definitions/FireCloudPermission'
      message:
        type: string
        description: ignored during input; if present during output, contains error messages

  MethodConfigACL:
    type: array
    items:
      properties:
        user:
          type: string
          description: a user's ID or "public"
        role:
          type: string
          description: one of "NO ACCESS", "READER", or "OWNER"
      required:
        - user
        - role

  MethodConfigRename:
    type: object
    properties:
      namespace:
        type: string
        description: Method configuration namespace
      name:
        type: string
        description: Method configuration name
      workspaceName:
        type: object
        description: Map[String, String] with corresponding workspace-related information - name and namespace
    required:
      - namespace
      - name
      - workspaceName

  MethodConfiguration:
    description: ''
    required:
      - namespace
      - name
      - inputs
      - methodRepoMethod
    type: object
    properties:
      namespace:
        type: string
        description: 'This method configuration''s namespace'
      name:
        type: string
        description: The name of the method configuration
      rootEntityType:
        type: string
        description: 'The root entity type that the method will be running on. Optional if this method config doesn''t run on an entity (i.e. uses only workspace attributes and literal inputs).'
      prerequisites:
        type: object
        description: Map[String, String]
      inputs:
        type: object
        description: Map[String, String]
      outputs:
        type: object
        description: Map[String, String]
      methodRepoMethod:
        $ref: '#/definitions/MethodRepoMethod'
        description: The properties of the method from the method store that this config is associated with
      methodConfigVersion:
        type: integer
        description: 'Version number, incremented on edit'
      deleted:
        type: boolean
        description: 'Is this config marked as deleted?'

  MethodConfigurationName:
    required:
      - namespace
      - name
    type: object
    properties:
      namespace:
        type: string
        description: 'This method configuration''s namespace'
      name:
        type: string
        description: The name of the method configuration

  MethodDefinition:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace which contains the method.
      name:
        type: string
        description: Name of the method.
      synopsis:
        type: string
        description: Synopsis of the method
      managers:
        type: array
        items:
          type: string
        description: List of Owners.
      public:
        type: boolean
        description: Is this method publicly readable?
      numConfigurations:
        type: number
        description: count of configurations associated with this method
      numSnapshots:
        type: number
        description: count of snapshots of this method
      entityType:
        type: string
        description: always "Workflow".
        default: Workflow

  MethodID:
    type: object
    properties:
      methodNamespace:
        type: string
        description: Method namespace
      methodName:
        type: string
        description: Method name
      methodVersion:
        type: integer
        default: 0
        description: Method version
    required:
      - methodNamespace
      - methodName
      - methodVersion

  MethodQuery:
    type: object
    properties:
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: YOUR_NAMESPACE
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      snapshotComment:
        type: string
        description: Snapshot comment of AgoraEntity
        default: Improved spline reticulation
      documentation:
        type: string
        description: Documentation of the AgoraEntity.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      payload:
        type: string
        description: Payload of method -- must be in WDL format
        default: >
          task wc {File in_file command { cat ${in_file} | wc -l } output { Int
          count = read_int(stdout()) }}
      entityType:
        type: string
        description: Type of the AgoraEntity -- Task or Workflow.
        default: Task

  MethodShort:
    required:
      - managers
      - namespace
      - name
      - snapshotId
    type: object
    properties:
      managers:
        type: array
        items:
          type: string
        description: List of Owners.
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: YOUR_NAMESPACE
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      snapshotId:
        type: integer
        description: SnapshotId of AgoraEntity
      public:
        type: boolean
        description: If this AgoraEntity is publicly readable.

  MethodRepoMethod:
    description: ''
    required:
      - methodNamespace
      - methodName
      - methodVersion
    type: object
    properties:
      methodNamespace:
        type: string
        description: The namespace of the method in Agora
      methodName:
        type: string
        description: The name of the method in Agora
      methodVersion:
        type: integer
        description: The integer method version in Agora (or a string method version for Dockstore)
      methodPath:
        type: string
        description: The path of the method in Dockstore
      sourceRepo:
        description: The method's repository, currently one of "agora" or "dockstore"
        type: string
      methodUri:
        description: URI that specifies the method's repository and captures all the information necessary to identify the method within its repository (e.g. agora://namespace/name/1, dockstore://path/version)
        type: string

  MethodResponse:
    required:
      - managers
      - namespace
      - name
      - snapshotId
    type: object
    properties:
      managers:
        type: array
        items:
          type: string
        description: List of Owners.
      namespace:
        type: string
        description: Namespace which contains AgoraEntity.
        default: YOUR_NAMESPACE
      name:
        type: string
        description: Name of the AgoraEntity.
        default: BWA
      snapshotId:
        type: integer
        description: SnapshotId of AgoraEntity
      snapshotComment:
        type: string
        description: Snapshot comment of AgoraEntity
        default: Improved spline reticulation
      synopsis:
        type: string
        description: Synopsis which contains AgoraEntity.
        default: Quickly aligns short nucleotide sequences.
      documentation:
        type: string
        description: Documentation of the AgoraEntity. MUST BE REQUESTED EXPLICITLY.
        default: |
          BWA is a software package for mapping low-divergent sequences
          against a large reference genome, such as the human genome.
          It consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM.
      createDate:
        type: string
        description: Timestamp of creation
      url:
        type: string
        description: URL where resource can be accessed.
      payload:
        type: string
        description: Payload of method -- must be in WDL format. MUST BE REQUESTED EXPLICITLY.
        default: >
          task wc {File in_file command { cat ${in_file} | wc -l } output { Int
          count = read_int(stdout()) }}
      entityType:
        type: string
        description: Type of the AgoraEntity -- Task or Workflow.
        default: Task

  Namespace:
    type: object
    properties:
      namespace:
        type: string
        description: Entity namespace
      name:
        type: string
        description: Entity name

  NewMethodConfigIngest:
    type: object
    properties:
      namespace:
        type: string
        description: Method configuration namespace
      name:
        type: string
        description: Method configuration name
      rootEntityType:
        type: string
        description: Method configuration root entity type
      inputs:
        type: object
        description: Input map - Map[string, string]
      outputs:
        type: object
        description: Output map - Map[string, string]
      prerequisites:
        type: object
        description: Prerequisites map - Map[string, string]
      methodRepoMethod:
        type: object
        description: Method ID - Map
      methodConfigVersion:
        type: integer
        description: 'Version number, incremented on edit'
      deleted:
        type: boolean
        default: false
        description: 'Is this config marked as deleted?'
    required:
      - namespace
      - name
      - rootEntityType
      - inputs
      - outputs
      - prerequisites
      - methodRepoMethod
      - methodConfigVersion
      - deleted

  NihStatus:
    required:
      - linkedNihUsername
    type: object
    properties:
      linkedNihUsername:
        type: string
      datasetPermissions:
        type: array
        items:
          $ref: '#/definitions/DatasetPermission'
      linkExpireTime:
        type: integer
        format: int64
        default: 0

  NotificationType:
    description: key and description of a notification
    required:
      - notificationKey
      - description
    properties:
      notificationKey:
        type: string
      description:
        type: string

  OrchestrationVersion:
    type: object
    properties:
      version:
        type: string

  PermissionReport:
    description: ACLs for users of a workspace and methods referenced by that workspace
    required:
      - workspaceACL
      - referencedMethods
    properties:
      workspaceACL:
        description: a map of (user email -> WorkspaceAccessEntry). `exampleEmail` is an example key.
        properties:
          exampleEmail:
            $ref: '#/definitions/WorkspaceAccessEntry'
        additionalProperties:
          $ref: '#/definitions/WorkspaceAccessEntry'
      referencedMethods:
        type: array
        items:
          $ref: '#/definitions/EntityAccessControl'

  PermissionReportRequest:
    description: users and/or configs on which to report.
    properties:
      users:
        description: list of email addresses; optional; defaults to all users in the workspace
        type: array
        items:
          type: string
      configs:
        description: list of configs; optional; defaults to all configs in the workspace
        type: array
        items:
          $ref: '#/definitions/MethodConfigurationName'

  PFBRequest:
    type: object
    properties:
      url:
        type: string
        description: link to publically accessible PFB/Avro
    required:
      - url

  Profile:
    type: object
    properties:
      firstName:
        type: string
        description: User's first name
      lastName:
        type: string
        description: User's last name
      title:
        type: string
        description: User's title
      contactEmail:
        type: string
        description: User's contact email (if different from account email)
      institute:
        type: string
        description: User's home institution
      institutionalProgram:
        type: string
        description: User's institutional program
      programLocationCity:
        type: string
        description: User's program location city
      programLocationState:
        type: string
        description: User's program location state
      programLocationCountry:
        type: string
        description: User's program location country
      pi:
        type: string
        description: Principal Investigator
      nonProfitStatus:
        type: string
        description: User's program non-profit status
    required:
      - firstName
      - lastName
      - title
      - institute
      - institutionalProgram
      - programLocationCity
      - programLocationState
      - programLocationCountry
      - pi
      - nonProfitStatus

  PublishConfigurationIngest:
    type: object
    properties:
      configurationNamespace:
        type: string
        description: Method configuration namespace
      configurationName:
        type: string
        description: Method configuration name
      sourceNamespace:
        type: string
        description: Method configuration source namespace
      sourceName:
        type: string
        description: Method configuration source name
    required:
      - configurationNamespace
      - configurationName
      - sourceNamespace
      - sourceName

  RawlsGroupRef:
    type: object
    description: a reference to a group
    properties:
      groupName:
        type: string
        description: ''

  RawlsGroupShort:
    type: object
    description: a reference to a group
    properties:
      groupName:
        type: string
        description: 'the name of the group'
      groupEmail:
        type: string
        description: 'the email associated with the group'

  RawlsMe:
    type: object
    properties:
      userInfo:
        $ref: '#/definitions/UserInfo'
      enabled:
        $ref: '#/definitions/ExtendedEnabled'

  RegisterProfile:
    type: object
    properties:
      userId:
        type: string
        description: The user's subject id
      keyValuePairs:
        type: array
        items:
          $ref: '#/definitions/KeyValuePair'

  ResearchPurpose:
    type: object
    required:
      - DS
      - NMDS
      - NCTRL
      - NAGR
      - POA
      - NCU
    properties:
      DS:
        type: array
        items:
          type: string
          example: "http://purl.obolibrary.org/obo/DOID_4"
        description: >
          Disease focused research. Values are DOID ontology node ids in the form
          http://purl.obolibrary.org/obo/DOID_NNN. Specify an empty array if this
          is not disease focused research.
      NMDS:
        type: boolean
        default: false
        description: Methods development/Validation study
      NCTRL:
        type: boolean
        default: false
        description: Control set
      NAGR:
        type: boolean
        default: false
        description: Aggregate analysis to understand variation in the general population
      POA:
        type: boolean
        default: false
        description: Study population origins or ancestry
      NCU:
        type: boolean
        default: false
        description: Commercial purpose/by a commercial entity

  ResearchPurposeRequest:
    type: object
    properties:
      DS:
        type: array
        default: []
        items:
          type: string
          example: "http://purl.obolibrary.org/obo/DOID_4"
        description: >
          Disease focused research. Values are DOID ontology node ids in the form
          http://purl.obolibrary.org/obo/DOID_NNN. Specify an empty array if this
          is not disease focused research.
      NMDS:
        type: boolean
        default: false
        description: Methods development/Validation study
      NCTRL:
        type: boolean
        default: false
        description: Control set
      NAGR:
        type: boolean
        default: false
        description: Aggregate analysis to understand variation in the general population
      POA:
        type: boolean
        default: false
        description: Study population origins or ancestry
      NCU:
        type: boolean
        default: false
        description: Commercial purpose/by a commercial entity
      prefix:
        description: Prefix for query properties. Must match prefix used when indexing.
        type: string
        default: ""

  SearchTermRef:
    type: object
    properties:
      searchString:
        type: string
        description: The term to search for
      filters:
        type: object
        description: Map[String, Array[String]] Each entry contains the column name (i.e. "library:indication") and a list of terms that will be or'ed in the query (["cancer", "sleep apnea"])
      researchPurpose:
        $ref: '#/definitions/ResearchPurpose'
      fieldAggregations:
        type: object
        description: Map[String, Int] The list of fields for which you would like to retrieve aggregations and the number of aggregations to return. Default is 5. Specify 0 to get all
      from:
        type: integer
        default: 0
        description: Where in the results list to start (used for pagination)
      size:
        type: integer
        default: 10
        description: How many results to return
      sortField:
        type: string
        description: Field name on which to sort; defaults to sort by relevance if not specified
      sortDirection:
        type: string
        description: asc or desc; defaults to asc if not specified

  StackTraceElement:
    description: ''
    required:
      - className
      - methodName
      - fileName
      - lineNumber
    type: object
    properties:
      className:
        type: string
        description: class name
      methodName:
        type: string
        description: method name
      fileName:
        type: string
        description: source file name
      lineNumber:
        type: integer
        description: line number

  StringArray:
    type: array
    items:
      type: string
    example:
      - foo
      - bar

  Submission:
    description: ''
    properties:
      submissionId:
        type: string
        description: SubmissionRequest unique identifier
      submissionDate:
        type: string
        format: date-time
        description: SubmissionRequest date
      submitter:
        type: string
        description: user that created the submission
      methodConfigurationNamespace:
        type: string
        description: Method configuration namespace
      methodConfigurationName:
        type: string
        description: Method configuration name
      submissionEntity:
        $ref: '#/definitions/AttributeEntityReference'
        description: Optional if this submission is attached to a method configuration that has no root entity
      workflows:
        type: array
        description: Status of Workflow(s)
        items:
          $ref: '#/definitions/Workflow'
      status:
        $ref: '#/definitions/SubmissionStatus'
        description: Status
      cost:
        type: number
        format: float
        description: The compute cost of this submission
      useCallCache:
        type: boolean
        description: Whether or not to read from cache for this submission
      workflowFailureMode:
        type: string
        description: What happens after a task fails. Choose from ContinueWhilePossible and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell docs for more information.
        default: NoNewCalls
        enum: ["NoNewCalls", "ContinueWhilePossible"]

  SubmissionsCountResponse:
    type: object
    properties:
      Accepted:
        type: integer
      Evaluating:
        type: integer
      Submitting:
        type: integer
      Submitted:
        type: integer
      Aborting:
        type: integer
      Aborted:
        type: integer
      Done:
        type: integer

  SubmissionRequest:
    description: If the referenced method configuration takes no root entity, do not define `entityType`, `entityName` and `expression`.
    required:
      - methodConfigurationNamespace
      - methodConfigurationName
      - useCallCache
    type: object
    properties:
      methodConfigurationNamespace:
        type: string
        description: Namespace of the method configuration to execute.
      methodConfigurationName:
        type: string
        description: Name of the method configuration to execute.
      entityType:
        type: string
        description: Type of root entity for expression. Optional if the method configuration has no root entity.
      entityName:
        type: string
        description: Name of root entity for expression. Optional if the method configuration has no root entity.
      expression:
        type: string
        description: Expression that resolves to one or more entities matching the entity type in the method configuration. Optional if the method configuration has no root entity.
      useCallCache:
        type: boolean
        description: Whether or not to read from cache for this submission.
      workflowFailureMode:
        type: string
        description: What happens after a task fails. Choose from ContinueWhilePossible and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell docs for more information.
        default: NoNewCalls
        enum: ["NoNewCalls", "ContinueWhilePossible"]

  SubmissionStatus:
    type: string
    description: submission status
    enum: ["Accepted", "Evaluating", "Submitting", "Submitted", "Aborting", "Aborted", "Done"]

  SubmissionValidationEntityInputs:
    description: the results of parsing each of the inputs for one entity
    required:
      - entityName
      - inputResolutions
    type: object
    properties:
      entityName:
        type: string
        description: name of entity
      inputResolutions:
        type: array
        description: input resolution
        items:
          $ref: '#/definitions/SubmissionValidationValue'

  SubmissionValidationHeader:
    description: common values for all the entities -- the entity type and the input descriptions
    required:
      - entityType
      - inputExpressions
    type: object
    properties:
      entityType:
        type: string
        description: type of entity
      inputExpressions:
        type: array
        description: input descriptions
        items:
          $ref: '#/definitions/SubmissionValidationInput'

  SubmissionValidationInput:
    description: 'method configuration input parameter, it''s name and the associated expression from the method config'
    required:
      - wdlName
      - expression
    type: object
    properties:
      wdlName:
        type: string
        description: name of input
      expression:
        type: string
        description: expression for input

  SubmissionValidationReport:
    description: the results of parsing each input for each entity
    required:
      - request
      - header
      - validEntities
      - invalidEntities
    type: object
    properties:
      header:
        $ref: '#/definitions/SubmissionValidationHeader'
        description: common values for all entities
      validEntities:
        type: array
        description: runnable entities
        items:
          $ref: '#/definitions/SubmissionValidationEntityInputs'
      invalidEntities:
        type: array
        description: non-runnable entities
        items:
          $ref: '#/definitions/SubmissionValidationEntityInputs'
      request:
        $ref: '#/definitions/SubmissionRequest'

  SystemStatus:
    description: report status of systems Orchestration calls out to
    type: object
    required:
      - ok
      - systems
    properties:
      ok:
        type: boolean
        description: whether any system(s) need attention
        example: false
      systems:
        type: object
        description: Map[String, SubsystemStatus]
        example:
          Agora:
            ok: true
          Google:
            ok: true
          Consent:
            ok: false
            messages:
              - "ClusterHealth is RED"
          Rawls:
            ok: true
          Ontology:
            ok: true
          Search:
            ok: true
          Thurloe:
            ok: false
            messages:
              - "Thurloe misbehavior message"

  SubsystemStatus:
    description: specifics for each subsystem
    properties:
      ok:
        type: boolean
        description: whether this system needs attention
      messages:
        type: array
        items:
          type: string

  SubmissionValidationValue:
    description: result of an expression parse for one of the inputs
    required:
      - inputName
    type: object
    properties:
      value:
        type: string
        description: the value of the input expression for the specified entity
      error:
        type: string
        description: parsing error(s)
      inputName:
        type: string
        description: name of input

  TerraPreference:
    description: Current user's choice of UI views.
    properties:
      preferTerra:
        type: boolean
        description: When true, prefer Terra UI; when false, prefer Legacy FireCloud UI.
      preferTerraLastUpdated:
        type: number
        description: Epoch timestamp representing when the Terra Preference was last saved.

  ToolClass:
    description: Describes a class (type) of tool allowing us to categorize workflows, tools, and maybe even other entities (such as services) separately
    properties:
      id:
        type: string
        description: The unique identifier for the class
      name:
        type: string
        description: A short friendly name for the class
      description:
        type: string
        description: A longer explanation of what this class is and what it can accomplish
  Tool:
    description: A tool (or described tool) describes one pairing of a tool as described in a descriptor file (which potentially describes multiple tools) and a Docker image.
    required:
      - url
      - id
      - organization
      - author
      - meta-version
      - toolclass
      - versions
    properties:
      url:
        type: string
        description: The URL for this tool in this registry, for example `http://agora.broadinstitute.org/tools/123456`
      id:
        type: string
        description: A unique identifier of the tool, scoped to this registry, for example `123456` or `123456_v1`
      organization:
        type: string
        description: The organization that published the image.
      toolname:
        type: string
        description: The name of the tool.
      toolclass:
        $ref: '#/definitions/ToolClass'
      description:
        type: string
        description: The description of the tool.
      author:
        type: string
        description: Contact information for the author of this tool entry in the registry. (More complex authorship information is handled by the descriptor)
      meta-version:
        type: string
        description: 'The version of this tool in the registry. Iterates when fields like the description, author, etc. are updated.'
      contains:
        description: An array of IDs for the applications that are stored inside this tool (for example `https://bio.tools/tool/mytum.de/SNAP2/1`). This always returns an empty array.
        type: array
        items:
           type: string
      verified:
        type: boolean
        description: Reports whether this tool has been verified by a specific organization or individual.  This always returns false.
      verified-source:
        type: string
        description: Source of metadata that can support a verified tool, such as an email or URL
      signed:
        type: boolean
        description: Reports whether this tool has been signed.  This always returns false.
      versions:
        description: A list of versions for this tool
        type: array
        items:
          $ref: '#/definitions/ToolVersion'
  ToolVersion:
    description: A tool version describes a particular iteration of a tool as described by a reference to a specific image and dockerfile.
    required:
      - url
      - id
      - meta-version
    properties:
      name:
        type: string
        description: The name of the version.
      url:
        type: string
        description: The URL for this tool in this registry, for example `http://agora.broadinstitute.org/tools/123456/1`
      id:
        type: string
        description: An identifier of the version of this tool for this particular tool registry, for example `v1`
      image:
        type: string
        description: The docker path to the image (and version) for this tool. (e.g. quay.io/seqware/seqware_full/1.1). This always returns an empty string.
      descriptor-type:
        type: array
        description: The type (or types) of descriptors available.
        items:
          type: string
          enum:
            - WDL
      dockerfile:
        type: boolean
        description: Reports if this tool has a dockerfile available. This always returns false.
      meta-version:
        type: string
        description: 'The version of this tool version in the registry. Iterates when fields like the description, author, etc. are updated.'
  ToolDescriptor:
    description: A tool descriptor is a metadata document that describes one or more tools.
    required:
      - type
      - descriptor
    properties:
      type:
        type: string
        enum:
          - WDL
      descriptor:
        type: string
        description: The descriptor that represents this version of the tool. (WDL)
      url:
        type: string
        description: 'Optional url to the tool descriptor used to build this image, should include version information, and can include a git hash (e.g. https://raw.githubusercontent.com/ICGC-TCGA-PanCancer/pcawg_delly_workflow/ea2a5db69bd20a42976838790bc29294df3af02b/delly_docker/Delly.cwl )'
  TrialOperationResponse:
    description: The result of the operation for each user, grouped by the status
    properties:
      Success:
        type: array
        items:
          type: string
        example:
         - "user1@email.com"
         - "user2@email.com"
      NoChangeRequired:
        type: array
        items:
          type: string
        example:
         - "user2@gmail.com"
      Failure:
        type: array
        items:
          type: string
        example:
          - "name@gmail.com"
      ServerError:
        type: array
        items:
          type: string
        example:
         - "user@gmail.com"

  Metadata:
    description: Describes this registry to better allow for mirroring and indexing.
    required:
      - version
      - api-version
    properties:
      version:
        type: string
        description: The version of this registry
      api-version:
        type: string
        description: The version of the GA4GH tool-registry API supported by this registry
      country:
        type: string
        description: A country code for the registry (ISO 3166-1 alpha-3)
      friendly-name:
        type: string
        description: A friendly name that can be used in addition to the hostname to describe a registry

  UserImportPermission:
    type: object
    properties:
      billingProject:
        type: boolean
        description: does the user have at least one ready billing project?
      writableWorkspace:
        type: boolean
        description: does the user have at least one writable workspace?

  UserInfo:
    type: object
    properties:
      userSubjectId:
        type: string
        description: User's ID (subject id from Google)
      userEmail:
        type: string
        description: User's email

  ValidatedMethodConfiguration:
    description: 'Information about the validity of a method configuration''s expressions relative to the method itself'
    required:
      - methodConfiguration
      - validInputs
      - invalidInputs
      - missingInputs
      - extraInputs
      - validOutputs
      - invalidOutputs
    properties:
      validInputs:
        type: array
        items:
          type: string
      invalidInputs:
        type: object
      missingInputs:
        type: array
        items:
          type: string
      extraInputs:
        type: array
        items:
          type: string
      validOutputs:
        type: array
        items:
          type: string
      invalidOutputs:
        type: object
      methodConfiguration:
        $ref: '#/definitions/MethodConfiguration'

  Workflow:
    description: ''
    properties:
      workflowId:
        type: string
        description: Workflow unique identifier
      status:
        $ref: '#/definitions/WorkflowStatus'
        description: Workflow status
      statusLastChangedDate:
        type: string
        format: date-time
        description: Status last-changed date
      workflowEntity:
        $ref: '#/definitions/AttributeEntityReference'
        description: Optional if this workflow did not run on an entity (i.e. its method configuration has no root entity)
      inputResolutions:
        type: array
        items:
          $ref: '#/definitions/SubmissionValidationValue'
        description: The evaluation of each input
      messages:
        type: array
        description: List of messages about this workflow
        items:
          type: string
      cost:
        type: number
        format: float
        description: The run cost of this workflow

  WorkflowCost:
    description: The cost of a workflow, if available
    properties:
      cost:
        type: number
        description: Workflow cost
      workflowId:
        type: string
        description: The id of this workflow

  WorkflowQueueStatusResponse:
    description: Information about the status of workflows and the workflow queue
    required:
      - estimatedQueueTimeMS
      - workflowsBeforeNextUserWorkflow
      - workflowCountsByStatus
    type: object
    properties:
      estimatedQueueTimeMS:
        type: integer
        description: estimated milliseconds until the current queue is submitted
      workflowsBeforeNextUserWorkflow:
        type: integer
        description: the number of workflows in the queue ahead of the user's first workflow
      workflowCountsByStatus:
        type: object
        description: Map[String,Int]

  WorkflowStatus:
    type: string
    description: workflow status
    enum: ["Queued", "Launching", "Submitted", "Running", "Failed", "Succeeded", "Aborting", "Aborted", "Unknown"]

  Workspace:
    description: ''
    required:
      - namespace
      - name
      - workspaceId
      - authorizationDomain
      - bucketName
      - createdDate
      - lastModified
      - createdBy
      - attributes
      - accessLevels
      - authDomainACLs
      - isLocked
    type: object
    properties:
      namespace:
        type: string
        description: The namespace the workspace belongs to
      name:
        type: string
        description: The name of the workspace
      authorizationDomain:
        type: array
        items:
          $ref: '#/definitions/ManagedGroupRef'
        description: The list of groups to form the Authorization Domain (empty if no Authorization Domain is set)
      workspaceId:
        type: string
        description: A UUID associated with the workspace
      bucketName:
        type: string
        description: The name of the bucket associated with the workspace
      createdDate:
        type: string
        format: date-time
        description: 'The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ format'
      lastModified:
        type: string
        format: date-time
        description: 'The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ format'
      createdBy:
        type: string
        description: The user who created the workspace
      attributes:
        type: object
        description: Map[String, Attribute]
      accessLevels:
        type: object
        description: Map[String, RawlsGroupRef]
      authDomainACLs:
         type: object
         description: Map[String, RawlsGroupRef]
      isLocked:
        type: boolean
        description: Can the Workspace currently be modified?

  WorkspaceACL:
    description: ''
    required:
      - acl
    type: object
    properties:
      acl:
        type: object
        description: Map[String, WorkspaceAccessEntry]

  WorkspaceACLUpdate:
    description: ''
    required:
      - email
      - accessLevel
    type: object
    properties:
      email:
        type: string
        description: email address of the user or group whose permissions will be changed
      accessLevel:
        type: string
        description: The access level to grant to this user or group (OWNER, READER, WRITER, NO ACCESS)
      canShare:
        type: boolean
        description: Set to true if you want this user to be able to share the workspace with other users, only meaningful for readers and writers, default false
      canCompute:
        type: boolean
        description: Set to true if you want this user to be able to launch compute in this workspace, may not be true for readers, default false for reader, true otherwise

  WorkspaceACLUpdateResponse:
    description: ''
    required:
      - subjectId
      - accessLevel
    type: object
    properties:
      subjectId:
        type: string
        description: id of the user or group whose permissions will be changed
      accessLevel:
        type: string
        description: The access level granted to this user or group (OWNER, READER, WRITER, NO ACCESS)

  WorkspaceACLUpdateResponseList:
    description: ''
    required:
      - usersUpdated
      - invitesSent
      - invitesUpdated
      - usersNotFound
    type: object
    properties:
      usersUpdated:
        type: array
        description: the users or groups who were updated
        items:
          $ref: '#/definitions/WorkspaceACLUpdateResponse'
      invitesSent:
        type: array
        description: the list of invites that were sent
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      invitesUpdated:
        type: array
        description: the list of invites that were updated
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      usersNotFound:
        type: array
        description: the users or groups who were not found
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'

  WorkspaceAccessEntry:
    description: ''
    required:
      - accessLevel
      - pending
      - canShare
      - canCompute
    type: object
    properties:
      accessLevel:
        type: string
        description: The access level granted to this user or group (OWNER, READER, WRITER, NO ACCESS)
      pending:
        type: boolean
        description: The status of the users access
      canShare:
        type: boolean
        description: True if the user can share the workspace with others, false otherwise
      canCompute:
        type: boolean
        description: True if the user can launch compute in this workspace, false otherwise

  WorkspaceBucketOptions:
    description: 'Extra information about a GCS bucket attached to a workspace'
    required:
      - requesterPays
    properties:
      requesterPays:
        type: boolean
        description: "Whether the bucket is requester pays"

  WorkspaceCatalog:
    type: object
    description: ''
    required:
      - email
      - catalog
    properties:
      email:
        type: string
        description: email address of the user or group whose permissions will be changed
      catalog:
        type: boolean
        description: Set to true if you want this user to be able to perform library related operations on the workspace

  WorkspaceCatalogResponse:
    type: object
    description: ''
    required:
      - subjectId
      - catalog
    properties:
      subjectId:
        type: string
        description: subject id of the user or group whose permissions were changed
      catalog:
        type: boolean
        description: Set to true if you want this user to be able to perform library related operations on the workspace

  WorkspaceCatalogUpdateResponseList:
    type: object
    description: ''
    required:
      - usersUpdated
      - emailsNotFound
    properties:
      usersUpdated:
        type: array
        description: the users or groups who were updated
        items:
          $ref: '#/definitions/WorkspaceCatalogResponse'
      emailsNotFound:
        type: array
        description: the emails of users or groups who were not found
        items:
          type: string

  WorkspaceIngest:
    required:
      - namespace
      - name
      - attributes
    type: object
    properties:
      namespace:
        type: string
        description: New workspace namespace
      name:
        type: string
        description: New workspace name
      attributes:
        type: object
        additionalProperties:
          type: string
        description: Map of attributes
      authorizationDomain:
        type: array
        items:
          $ref: '#/definitions/ManagedGroupRef'
        description: The list of groups to form the Authorization Domain (empty if no Authorization Domain is set)

  WorkspaceTag:
    required:
      - tag
      - count
    type: object
    properties:
      tag:
        type: string
        description: tag string
        example: "a tag"
      count:
        type: number
        description: number of usages of the tag across Firecloud
        example: 5

  ConfigurationPayload:
    type: object
    properties:
      name:
        type: string
        description: Name of this config
        default: cancer_exome_pipeline_v2
      namespace:
        type: string
        description: Namespace of this config
        default: broad-dsde-dev
      methodRepoMethod:
        type: object
        properties:
          methodName:
            type: string
            description: Name of referenced method
            default: cancer_exome_pipeline_v2
          methodNamespace:
            type: string
            description: Namespace of referenced method
            default: broad-dsde-dev,
          methodVersion:
            type: integer
            description: Snapshot ID of referenced method
            default: 1
      outputs:
        type: object
        description: Map[String, AttributeString] from method's WDL outputs to fields in the workspace data model
      inputs:
        type: object
        description: Map[String, AttributeString] from method's WDL inputs to fields in the workspace data model
      rootEntityType:
        type: string
        default: pair
      prerequisites:
        type: object
        description: Map[String, AttributeString]
        default: {}
      methodConfigVersion:
        type: integer
        description: Snapshot ID of this config
        default: 1
      deleted:
        type: boolean
        description: Has this config been deleted?
        default: false
  WorkflowQueryResponse:
    description: Response to a workflow query
    required:
      - results
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/WorkflowQueryResult'
  WorkflowQueryResult:
    description: Result for an individual workflow returned by a workflow query
    required:
      - id
      - name
      - status
      - start
    properties:
      id:
        type: string
        description: Workflow ID
      name:
        type: string
        description: Workflow name
      status:
        type: string
        description: Workflow status
      start:
        type: string
        format: date-time
        description: Workflow start datetime
      end:
        type: string
        format: date-time
        description: Workflow end datetime
  WorkflowQueryParameter:
    description: Workflow query parameters
    minProperties: 1
    maxProperties: 1
    properties:
      start:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or later start datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      end:
        type: string
        format: date-time
        description: >
          Returns only workflows with an equal or earlier end datetime.  Can be specified at most once.
          If both start and end date are specified, start date must be before or equal to end date.
      status:
        type: string
        enum:
          - Submitted
          - Running
          - Aborting
          - Failed
          - Succeeded
          - Aborted
        description: >
          Returns only workflows with the specified status.  If specified multiple times,
          returns workflows in any of the specified statuses.
      name:
        type: string
        pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
        description: >
          Returns only workflows with the specified name.  If specified multiple times,
          returns workflows with any of the specified names.
      id:
        type: string
        pattern: ^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$
        description: >
          Returns only workflows with the specified workflow id.  If specified multiple times,
          returns workflows with any of the specified workflow ids.
  VersionResponse:
    description: Returns the version of Cromwell
    properties:
      cromwell:
        type: string
        description: The version of the Cromwell Engine
  StatusResponse:
    description: Returns the status of monitored subsystems.
    type: object
    properties:
      serviceName:
        type: object
        properties:
          ok:
            type: boolean
          messages:
            type: array
            items:
              type: string
  WorkflowAbortResponse:
    required:
      - id
      - status
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
  WorkflowMetadataResponse:
    description: Workflow and call level metadata
    required:
      - id
      - status
      - submission
    properties:
      id:
        type: string
        description: The identifier of the workflow
      status:
        type: string
        description: The status of the workflow
      submission:
        type: string
        format: date-time
        description: Submission datetime of the workflow in ISO8601 format with milliseconds
      start:
        type: string
        format: date-time
        description: Start datetime of the workflow in ISO8601 format with milliseconds
      end:
        type: string
        format: date-time
        description: End datetime of the workflow in ISO8601 format with milliseconds
      inputs:
        type: object
        description: Map of input keys to input values
      outputs:
        type: object
        description: Map of output keys to output values
      calls:
        $ref: '#/definitions/CallMetadata'
      failures:
        $ref: '#/definitions/FailureMessage'
  FailureMessage:
    description: Failure messages
    required:
      - failure
      - timestamp
    properties:
      failure:
        type: string
        description: The failure message
      timestamp:
        type: string
        format: date-time
        description: The time at which this failure occurred
  WorkflowDescription:
    required:
      - valid
      - errors
      - name
      - inputs
      - outputs
      - submittedDescriptorType
    properties:
      valid:
        type: boolean
        description: Whether the workflow and inputs as submitted passed validation
      errors:
        type: array
        items:
          type: string
        example:
          - "The 'errors' field will be filled if 'valid' is false"
          - "We might also provide warnings to a 'valid' workflow here"
          - "Otherwise, 'errors' will be the empty array"
        description: The set of validation failure messages
      name:
        type: string
        description: For a source file with one workflow and zero or more tasks, the name of the workflow. For a single task, the name of the task. For a source file with multiple tasks but no workflows, the empty string.
      inputs:
        description: A list of inputs for this tool
        type: array
        items:
          $ref: '#/definitions/ToolInputParameter'
        example:
          - name: my_wf.string_input
            valueType:
              typeName: String
            optional: false
            typeDisplayName: String
          - name: my_wf.array_input
            valueType:
              typeName: Array
              arrayType:
                typeName: String
            optional: false
            typeDisplayName: Array[String]
          - name: my_wf.optional_input
            valueType:
              typeName: Optional
              optionalType:
                typeName: String
            optional: true
            default: "hello"
            typeDisplayName: String?
          - name: my_wf.map_input
            valueType:
              typeName: Map
              mapType:
                keyType:
                  typeName: String
                valueType:
                  typeName: Int
            optional: false
            typeDisplayName: Map[String, Int]
          - name: my_wf.object_input
            valueType:
              typeName: Object
              objectFieldTypes:
                - fieldName: "int_field"
                  fieldType:
                    typeName: Int
                - fieldName: "int_array_field"
                  fieldType:
                    typeName: Array
                    arrayType:
                      typeName: Int
            optional: false
            typeDisplayName: Object
          - name: my_wf.int_string_pair_input
            valueType:
              typeName: Pair
              pairTypes:
                - leftType:
                    - typeName: Int
                - rightType:
                    - typeName: String
            optional: false
            typeDisplayName: Pair[Int, String]
      outputs:
        description: A list of outputs for this tool
        type: array
        items:
          $ref: '#/definitions/ToolOutputParameter'
        example:
          - name: my_wf.string_output
            valueType:
              typeName: String
            typeDisplayName: String
          - name: my_wf.array_output
            valueType:
              typeName: Array
              arrayType:
                typeName: String
            typeDisplayName: Array[String]
          - name: my_wf.map_output
            valueType:
              typeName: Map
              mapType:
                keyType:
                  typeName: String
                valueType:
                  typeName: Int
            typeDisplayName: Map[String, Int]
          - name: my_wf.object_output
            valueType:
              typeName: Object
              objectFieldTypes:
                - fieldName: "int_field"
                  fieldType:
                    typeName: Int
                - fieldName: "int_array_field"
                  fieldType:
                    typeName: Array
                    arrayType:
                      typeName: Int
            typeDisplayName: Object
          - name: my_wf.int_string_pair_output
            valueType:
              typeName: Pair
              tupleTypes:
                - typeName: Int
                - typeName: String
            typeDisplayName: Pair[Int, String]
      submittedDescriptorType:
        $ref: '#/definitions/DescriptorTypeAndVersion'
  ToolInputParameter:
    type: object
    description: >-
      An input parameter for a tool or workflow.
    required:
      - name
      - valueType
      - optional
      - default
    properties:
      name:
        type: string
        description: The name of this input value (formatted as expected by the tool)
      valueType:
        $ref: '#/definitions/ValueType'
      optional:
        type: boolean
        description: Whether the tool allows this value to not be specified
      default:
        type: string
        description: The in-language expression used to evaluate a default value for this parameter, if
          none is supplied.
  ToolOutputParameter:
    type: object
    description: >-
      An output parameter for a tool or workflow.
    required:
      - name
      - valueType
    properties:
      name:
        type: string
        description: The name of this input value (formatted as expected by the tool)
      valueType:
        $ref: '#/definitions/ValueType'
  ValueType:
    description: The type expected for a given value.
    type: object
    required:
      - valueType
    maxProperties: 2
    properties:
      typeName:
        type: string
        description: The type of this value
        enum:
          - String
          - File
          - Directory
          - Float
          - Int
          - Boolean
          - Optional
          - Array
          - Tuple
          - Map
          - Object
      optionalType:
        $ref: '#/definitions/ValueType'
      arrayType:
        $ref: '#/definitions/ValueType'
      mapType:
        $ref: '#/definitions/MapValueType'
      tupleTypes:
        type: array
        items:
          $ref: '#/definitions/ValueType'
      objectFieldTypes:
        type: array
        items:
          type: object
          properties:
            fieldName:
              type: string
            fieldType:
              $ref: '#/definitions/ValueType'
  MapValueType:
    type: object
    description: A type representing a map from one type to another.
    required:
      - keyType
      - valueType
    properties:
      keyType:
        $ref: '#/definitions/ValueType'
      valueType:
        $ref: '#/definitions/ValueType'
  DescriptorTypeAndVersion:
    type: object
    description: >-
      A workflow descriptor file type and version.
    required:
      - descriptorType
      - descriptorTypeVersion
    properties:
      descriptorType:
        $ref: '#/definitions/DescriptorType'
      descriptorTypeVersion:
        type: string
        example: "1.0"
  DescriptorType:
    type: string
    description: >-
      One from a list of descriptor type strings (e.g. CWL, WDL).
      Note that these files can also include associated Docker/container files
      and test parameters that further describe a version of a tool
    example: "WDL"
    enum:
      - CWL
      - WDL
  LabelsResponse:
    required:
      - id
      - labels
    properties:
      id:
        type: string
        description: The identifier of the workflow
      labels:
        type: string
        description: The custom labels as json
