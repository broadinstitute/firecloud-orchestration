include "src/main/resources/reference.conf"

akka {
  loglevel = "OFF"
}

auth {
  googleClientId = "dummy"
  googleSecretsJson = """{"web":{"auth_provider_x509_cert_url":"","auth_uri":"","client_id":"","client_secret":"","javascript_origins":[],"redirect_uris":[],"token_uri":""}}"""
  pemFile = "/dev/null"
  pemFileClientId = "dummy"
  jsonFile = "/dev/null"
  rawlsPemFile = "/dev/null"
  rawlsPemFileClientId = "dummy"

  swaggerRealm = "broad-dsde-dev"
}

agora {
  baseUrl = "http://localhost:8989"
}

rawls {
  baseUrl = "http://localhost:8990"
}

thurloe {
  baseUrl = "http://localhost:8991"
}

sam {
  baseUrl = "http://localhost:8994"
}

cromiam {
  baseUrl = "http://localhost:8995"
}

cwds {
  baseUrl = "https://local.broadinstitute.org:8996"
  enabled = true
  supportedFormats = ["pfb","tdrexport","rawlsjson"]
  bucketName = "cwds-testconf-bucketname"
}

firecloud {
  baseUrl = "https://local.broadinstitute.org"
  portalUrl = "https://local.broadinstitute.org"
  fireCloudId = "123"
  serviceProject = "test-project"
  supportDomain = "test-domain.org"
  supportPrefix = "ag-test-"
  userAdminAccount = "fake-admin@fake.firecloud.org"
}

nih {
  whitelistBucket = "firecloud-whitelist-dev"
  whitelists = {
    "TARGET" {
      "fileName":"target-whitelist.txt",
      "rawlsGroup":"TARGET-dbGaP-Authorized"
    },
    "TCGA" {
      "fileName":"tcga-whitelist.txt",
      "rawlsGroup":"TCGA-dbGaP-Authorized"
    },
    "BROKEN" {
      "fileName":"broken-whitelist.txt",
      "rawlsGroup":"this-doesnt-matter"
    }
  }
}

elasticsearch {
  urls = "localhost:9300"
  clusterName = "elasticsearch5a"
  index = "unittest"
  ontologyIndex = "ontology-unittest"
  shareLogIndex = "sharelog-unittest"
  discoverGroupNames = ["all_broad_users","demo_users"]
}

duos {
  baseOntologyUrl = "http://localhost:8993"
  dulvn = 4
}

# these are the settings currently used at runtime; copy them here
# so we're testing under similar conditions.
spray.can.host-connector {
  max-connections = 4
  max-retries = 5
  pipelining = off
}

notification {
  fullyQualifiedNotificationTopic = "dummy"
}
